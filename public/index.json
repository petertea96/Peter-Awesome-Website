[{"authors":["admin"],"categories":null,"content":"I am currently completing my Master\u0026rsquo;s degree under the supervision of Tim Swartz with a Natural Sciences and Engineering Research Council of Canada’s (NSERC) Graduate Scholarship. I work as an R facilitator at the Research Commons of SFU, providing R code consultations to graduate students for their research projects, as well as running R workshops.\nIn the past, I\u0026rsquo;ve been fortunate to hold positions as a Statistical Genetics researcher under the supervision of Kelly Burkett, as well as a Data Scientist at the Canada Revenue Agency.\n","date":1587427200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1587427200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am currently completing my Master\u0026rsquo;s degree under the supervision of Tim Swartz with a Natural Sciences and Engineering Research Council of Canada’s (NSERC) Graduate Scholarship. I work as an R facilitator at the Research Commons of SFU, providing R code consultations to graduate students for their research projects, as well as running R workshops.\nIn the past, I\u0026rsquo;ve been fortunate to hold positions as a Statistical Genetics researcher under the supervision of Kelly Burkett, as well as a Data Scientist at the Canada Revenue Agency.","tags":null,"title":"Peter Tea","type":"authors"},{"authors":null,"categories":null,"content":" Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":" Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":["Peter Tea"],"categories":["Basketball"],"content":" All-NBA Team The All-NBA award is an interesting way we keep track of the best stars in the game. Voted on by reporters and members of the media, 15 players are chosen at the end of each season to occupy 3 All-NBA teams. 6 Guards, 6 Forwards and 3 Centers place high up in the clouds and marked as the best among their peers.\nOutside of being the top 15 players, what are the defining features of an All-NBA player? What do players have to accomplish in order to be considered for this prestigious award? Is there anything that separates a player on the 1st All-NBA team from a player on the 2nd or 3rd All-NBA teams? Have there been any egregious snubs for this award in the past? To answer these pressing questions, we first turn to Principal Component Analysis for guidance on distinguishing general patterns among All-NBA players.\n Table of contents Principal Component Analysis Data: Per 100 Possessions PCA Visualizations Closing Remarks  Principal Component Analysis  Among many potential capabilities, principal component analysis (PCA) can be used as a simple visualization tool when we have a myriad of continuous features to consider. In our case, we have several recognizable box score metrics like points scored, rebounds and assists standardized on a per 100 possessions rate that we’ll explore.\nPCA is an unsupervised algorithm that is able to summarize a set of correlated, continuous variables into a lower-dimensional representation that is easier to visualize. In some sense, we are compressing the data into a compact form that hopefully captures most of the variability in the data. With PCA, we’ll investigate which combination of features best explain the variability of NBA player performances across different seasons.\n Per 100 Possessions Data  While most box-score metrics are available at the end of each season on a per game basis (ex: Points per game), using a per game standard makes it challenging to compare performances of players under different team styles of basketball. For example, recently we’ve seen an emphasis on up-tempo and spread out offence largely popularized by coach Mike D’Antoni. The modern NBA offence has seen an explosion in the volume of shots taken each game, especially beyond the arc. Pace of play is much faster now than what it was even 10 years ago, making it extremely difficult to also compare players from different eras.\nOne stat that might allow us to better compare players under different offence styles is the per 100 possessions metric. This metric standardizes each player’s opportunity to fill the stat sheet, by exactly measuring how well players perform per 100 possessions rather than by game. Here, players who stuff the stat sheet with fewer opportunities will now appear more favourable than players who had more opportunities to accumulate box-scores.\nWe obtain per 100 possessions data through Basketball Reference, with the help of the bball R package.\n Data Preparation Since the inception of 3 separate All-NBA teams started in 1989, we begin collecting data from 1989 until the past 2019 season. The nomination of All-NBA teams started well before 1989, however only included 2 All-NBA teams.\nTo remove as much noise and outliers as possible, we’ve decided to only include players that satisfy the following two conditions:\nPlayed in at least 10 games Averaged at least 15 minutes played per game  Applying the above two filters reduced the size of the data from 12913 to 9126 observations. In total, we chose to look at 25 continuous features.\n PCA Visualizations  After standardizing each feature to have a mean of 0 and standard deviation of 1, we then apply the PCA algorithm through the Scikit-learn library in Python. We will first focus on visualization across the first 2 principal components, as it is easier to represent data in 2-D.\nEach principal component is simply a normalized linear combination of the 25 features, found by maximizing a variance objective function. Subsequent principal components are found with the added constraint that they are orthogonal to the previous principal components. Loadings are the weights for each of the 25 features relative to a principal component.\nWith a PC Loadings plot of the first and second principal components, we depict the directions in feature space along which the data vary the most. Each loadings vector shows the relative importance/weight that both principal components place on the 25 features.\nFrom this loadings plot, we see that Principal Component 1 (PC1) places its highest weights on rebounds, blocks, and field goal percentages (i.e. highest loading values along the x-axis). Hence, players with high PC1 scores might roughly correspond to players who can crash and bang in the paint, grab rebounds, alter shots at the rim and maybe even show some nice efficiency in finishing easy buckets near the rim. Interestingly, features with highly negative weights along this principal component include 3 pointers made and attempted, steals and assists which all summarize typical characteristics among traditional Guards (i.e. perimeter players).\nSimilarly, we see that Principal Component 2 (PC2) places its highest weights on points, field goals, field goal attempts and free throws made (i.e. highest values along the y-axis). We shouldn’t be too surprised to see all four of these variables located closely to one another since they are somewhat all correlated. Eventually as players take more and more shots, this will increase the number of field goals made which in turn will increase the number of points scored for that player. Players with high PC2 scores might correspond to players vying for scoring titles.\nHow do the players, and more importantly the all-NBA players, fit along this 2-D representation? For each of the n=9126 observations, we plot the scores of the first principal component along the x-axis, and the scores of the second principal component along the y-axis.\nLet’s first take a look at the scores for guards.\nHere we see a clear distinction of players who make All-NBA compared to those who don’t. While the majority of guards tend to have negative scores along the PC1 axis, about half of the All-NBA guards have highly positive PC1 scores. This might indicate that having higher versatility, that is the ability to not only facilitate plays but also score and grab rebounds, might lead to an All-NBA player. Of course, we do see a sizeable amount of guards placed near the direction favouring steals and assists so having higher versatility is certainly not a necessary condition for a guard to be All-NBA. Surprisingly, there does not appear to be an obvious pattern of players on 1st team All-NBA compared to the 2nd and 3rd teams.\nMoving onto Forwards, we see that most forwards seem to fit anywhere on this plot. However, majority Forwards who end up making All-NBA are found in the upper right quadrant with high PC1 and PC2 scores. In fact, it seems like having higher scores on both these axes is related to Forwards on the 1st All-NBA team. We see a bit more disparity of the 3 All-NBA teams on this plot.\nLastly for centers we see that they are placed mostly on the right side of this biplot. This is intuitive since most centers are not adept in steals, assists or 3 pointers (ahem Tragic Johnson alert). Most All-NBA players have positive PC2 scores, especially centers who make the 1st All-NBA team. Centers tend to grab more rebounds and block more shots, so it is not a surprise to see their scores be far along the right of the x-axis.\nSo far, we’ve only considered a two-dimensional representation of the p-dimensional data for simplicity. However, does 2 dimensions successfully capture the major patterns in the data? How much information is lost by projecting the observations onto only the first two principal components? That is, how much of the variance in the data is not contained in the first few principal components? To answer these important questions, we present a scree plot which depicts the proportion of variance explained by each of the principal components.\nWe see that the first principal component explains about 28 % of the variance in the data, and the second principal component explains 24 % of the variance. Together, the first two principal components explain almost 52 % of the variance in the data; just over half of the entire variance. The third principal component accounts for under 10 % of the variance, while the remaining principal components each slightly hover above or are below 5 % of the total variance.\nWhile the first two dimensions does miss out on a sizeable amount of variance, it does still provide an okay summary of the data. The convenience of plotting in only two dimensions is of course why we focussed merely on 2 principal components. The 3rd principal component explains less than half of either of the first two principal components, so it was not worthwhile to pursue an added layer of dimensionality with so little upside.\n Closing Remarks  So, what have we learned from looking at these plots? Essentially, Forwards and Centers who get more rebounds, blocks, points and field goal makes are more likely to be All-NBA caliber players. Furthermore, extra versatility for guards might make them All-NBA bound, but guards that excel under a traditional guard role can still vie for the all-NBA. In other words, the Earth is round, rain makes roads wet and Kawhi is still on load management. So much for making deep impressions on the game of basketball. While this isn’t ground-breaking results, it is still interesting to visualize specifically the tendencies of All-NBA players.\n Appendix Biplots combine both loading and score plots in a single display. They might be easier to analyse since everything is on a single plot, but I find them to be a bit clunky especially with many features plotted. To visualize relationships between continuous features, it might be appealing to look at pairwise correlation plots. The issue though is that with many continuous features included, these plots can get overloaded and difficult to visualize. In this project we only had 25 features to consider, which isn’t too bad.\n  ","date":1587427200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587427200,"objectID":"2477d8603f55269dde78dc3a36f5ec3c","permalink":"/project/all-nba-pca/","publishdate":"2020-04-21T00:00:00Z","relpermalink":"/project/all-nba-pca/","section":"project","summary":"NBA Data Visualization","tags":["Data Visualization","NBA","Basketball"],"title":"Principal Component Analysis on All-NBA","type":"project"},{"authors":["Peter Tea"],"categories":["Tennis"],"content":"  Attribution: Special thanks to Jeff Sackmann for scraping and providing the data freely on his Github page.   How do 1st serves differ from 2nd serves? Tennis serve faults are a common occurrence in any competitive tennis match. Depending on whether a player is on their 1st or their 2nd serve, serving strategy is at the forefront of the player’s decision making process in terms of how they want to attack their opponent. For instance, a player might choose a powerful serve that reduces the returner’s reaction time and ultimately makes these serves more difficult for the opponent to return. However, these fast serves are difficult to hit accurately and have a higher likelihood of landing outside the service box, usually resulting in a service fault. Instead, a player might choose a slower serve, which are easier for the player to hit accurately and consistently. However, these slow serves allow a higher reaction time for the returner, and may also be more predictable and easier for the opposing player returning the serve.\nMoreover on 1st serve, the player is reassured that if they miss their 1st serve, they will still have a second opportunity to serve again without penalty. Hence, the risk-return tradeoff of attacking the opponent with a big and powerful serve is certainly manageable. However, if the player is instead on 2nd serve then they may be more wary of this tradeoff, as there are no more remaining serves in the particular game. The choice of a more powerful but inconsistent serve vs. a slower but consistent serve is paramount as the player approaches the service line.\nIn this project, we look closely into the service power-consistency tradeoff with a couple of data visualizations.\nWe will first present an exploratory analysis on serves from some familiar names from both the ATP and WTA worlds. From the ATP, we chose to look at Rafael Nadal, Roger Federer and Novak Djokovic. From the WTA, we chose to look at Serena Williams, Simona Halep and Bianca Andreescu. After some data cleaning and aggregating steps on match summary data found on Jeff Sackmann’s Github page, we produce the following analysis from Wimbledon and the US Open grand slam tournaments of 2019.\nObserved 1st Serve Speed vs. 2nd Serve Speed at the 2019 Wimbledon Tournament As an exploratory step, we first plot the observed distributions of 1st serve speeds compared to 2nd serve speeds during the 2019 Wimbledon tournament. Since tennis serves are unique for each individual player, we provide plots of tennis serve speeds for each player of interest. On the x-axis, we have the serve speed in kilometres per hour, and on the y-axis we have the observed density (i.e. the proportion of each observed serve speed). For each plot, the distribution of 1st serve speeds are plotted in green while the distribution of 2nd serve speeds are plotted in orange. On the plots, we also present the average 1st serve and 2nd serve speeds with vertical dashed lines.\nATP Wimbledon 2019 Serve Speeds Starting with the ATP players, we present the following serve speed distribution plots:\nNote: From the dataset, both Novak and Roger played 7 matches while Rafa played 6 matches (Federer defeated Nadal in the semifinals, before falling to Djokovic in the finals).\nFrom the above 3 graphics, we make some simple remarks:\n For all 3 ATP players, the 1st serve distribution is left skewed, while the 2nd serve speed distribution appears more symmetric. The 1st serve skewed distribution indicates that on 1st serve, these 3 ATP players frequently serve at faster speeds than their average serve speed.\n The average 1st serve speed is consistently greater than the average 2nd serve speed.\n With the exception of Novak Djokovic, the maximum 2nd serve speed is lower than the average 1st serve speed! Djokovic’s 2nd serve speed has greater variance when compared to Roger and Rafa. Perhaps this has to do with Djokovic’s strategy of being more unpredictable in his 2nd serves?\n In any case, these 3 graphics indicate that these 3 ATP players tend to switch up their serve approaches given the situation of the match: On 1st serve, these players serve powerfully, but on 2nd serve these players serve more conservatively.\n  Moving on to the women’s game, we observe similar patterns when we look at the 2 WTA players who reached the Wimbledon final (Halep defeated Williams).\n WTA Wimbledon 2019 Serve Speeds Note: From the dataset, both Williams and Halep played 7 matches. Halep defeated Williams in the finals.\nThroughout the Wimbledon tournament, both Williams and Halep display distinct serve speeds depending on whether they are on their 1st or 2nd serve. The results are similar to what we’ve seen on the ATP serve graphics, however the first serve speed distributions here do not appear to be as left skewed as we’ve previously seen on the ATP graphics.\n What are some possible implications of a slower 2nd serve speed? Other than the speed of the serve, what else differs when players are serving on 1st serve, compared to when they serve on 2nd serve? We compile some summary statistics that compares the average serve speed, as well as the average win percentage, rally length and distance run by players when they are on 1st serve compared to when they are on 2nd serve.\nMore specifically, we calculate the following:\n Δ Serve Speed (KM/H) = Average 2nd serve speed - Average 1st serve speed Δ Win percentage = % Points won on 2nd serve - % Points won on 1st serve Δ Rally Length = Average rally length on 2nd serve - Average rally length on 1st serve Δ Distance Run = Average distance run on 2nd serve - Average distance run on 1st serve     Player Matches Δ Serve Speed (KM/H) Δ Win percentage Δ Rally Length Δ Distance Run    Djokovic 7 🔻29 🔻19 ❇️ 2.0 ❇️ 6.0  Nadal 6 🔻29 🔻16 ❇️ 1.0 ❇️ 3.0  Federer 7 🔻29 🔻15 ❇️ 1.5 ❇️ 4.0  Williams 7 🔻24 🔻14 ❇️ 1.0 ❇️ 3.0  Halep 7 🔻28 🔻10 ▶️ 0.0 ▶️ 0.0    From the above table, we can generate some interesting ideas about serve speeds. When we compare 2nd serves to 1st serves:\n Serve speed decreases Win percentage decreases Rally length increases Distance Run increases  How are all of these variables related to one another? We know that serve speed decreases as players go from their 1st serve to their 2nd serve. Furthermore, players tend to win a lower proportion of games as they play on their 2nd serves. Not only that but, the rallies that players are involved in are usually longer requiring more distance to run as players play on their 2nd serve.\nAs players use a more consistent 2nd serve approach, their serve speed drops which makes the serve easier to return. The opposing player can now anticipate and return the serve, get into a groove more easily, and force the game into longer rallies. More rallies require the player to move more around the court and chase the ball which explains the increase in distance run.\n  US Open 2019 Serve Speeds Inspired by these observed these patterns at Wimbledon, we then explore whether they exist in other tournaments where players play on different surfaces (Wimbledon is played on grass courts). To provide a partial answer to this question, we perform the same analysis using data from the 2019 US Open tournament, which is played on hardcourt.\nATP US Open 2019 Serve Speeds ```{r, USO9_us.png)\nFrom the 3 graphics above, we see that the 3 ATP players at the US Open all exhibit similar patterns observed during the Wimbledon grand slam tournament.\n WTA US Open 2019 Serve Speeds For completeness, we present the same table of numbers for the 2019 US Open tournament.\n  Player Δ Serve Speed (KM/H) Δ Win percentage Δ Rally Length Δ Distance Run     Djokovic 🔻33 🔻13 ❇️ 2.0 ❇️ 5.0   Nadal 🔻34 🔻18 ❇️ 3.0 ❇️ 9.0   Federer 🔻33 🔻22 ❇️ 2.0 ❇️ 5.0   Williams 🔻30 🔻17 ❇️ 1.0 ❇️ 4.0   Andreescu 🔻21 🔻18 ❇️ 1.0 ❇️ 3.0      Evaluating consistency of 1st serves \u0026amp; 2nd serves We’ve seen that 1st serves tend to be faster than 2nd serves, and players also tend to win more service games on 1st serves than on 2nd serves. You can imagine that if players serve as powerfully as they do on 1st serve throughout the entire match, perhaps they could win more service games. Unfortunately, the rate of success for hitting the powerful 1st serve is much lower than the rate of success for hitting the less powerful 2nd serve. We support this idea by presenting the percentages of serves that fall in the service box (i.e. serves that don’t miss) for 1st serves compared to 2nd serves. We present these percentages below for 5 players obtained from the 2019 Wimbledon tournament.\n  Player % 1st serve in % 2nd serve in       Djokovic 75 88     Nadal 73 93     Federer 75 94     Williams 73 92     Halep 76 91       For these players, 1st serves consistently have a lower percentage of landing inside the service box than 2nd serves. This may be because players have a higher margin of error on 1st serve, and can afford to swing powerfully. However, on 2nd serve the margin of error is lower since a missed serve here would now result in a double fault (meaning the opponent wins the point).\nPowerful serves are more likely to land out, which is why players tend to instead proceed with a more conservative, but more consistent 2nd serve approach.\n  Further Analysis It would be interesting to see if we can somehow model the serve power vs. consistency tradeoff. In particular, we want to know: “Over the long run, which is the better strategy: Serving powerfully or serving consistently?” If players approached 2nd serves the same way as they do 1st serves where they serve as powerfully as they can, would this be a better strategy than a conservative 2nd serve approach? Or is the risk from this approach too high? Over the long run, how many games would a player expect to win if they were to use this approach?\nIn this report, we’ve only looked at unique tennis players at the top of the tennis world. Could we make some conclusions about all tennis players in general?\nOne simlple analysis we’ve done on combined data from all players participating in the 2019 Wimbledon tournament, is verifying that service win percentage differs between 1st serve and 2nd serve. We first present a contingency table with the number of service games won stratified across the serve number:\n ServeNumber Win 1 2 No 8896 6769 Yes 20490 8567 Then, using a chi-square test, we obtain a p-value less than 0.05. We conclude that there exists some relationship between win percentage and the serve number. Players on 1st serve are more likely to win, compared to when players are on their 2nd serve.\n  ","date":1585180800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585180800,"objectID":"d80bf280dc637cd55b7be4425115fc85","permalink":"/post/2019-serve-speeds/","publishdate":"2020-03-26T00:00:00Z","relpermalink":"/post/2019-serve-speeds/","section":"post","summary":"Tennis Exploratory Data Analysis","tags":["Grand-Slam","Serve","Serve speed","Tennis"],"title":"Serve Power vs. Consistency Tradeoff","type":"post"},{"authors":["Peter Tea"],"categories":["Basketball"],"content":" 2020 MIT SSAC For the 2020 MIT SSAC Hackathon, participants were given access to tracking data for 8 NCAA basketball games. My group and I decided to look into how shot release angles, shot release velocities and shot distance from the hoop affect the probability of a player making a shot. While we did run out of time, the ultimate goal was then to observe how player fatigue impact these variables (eg: how does shot release angle and velocity change when players are tired - and how much could this impact the probability that players make shots?).\nHere is a link to the slides used for our presentation!\n ","date":1584316800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1584316800,"objectID":"71d5456af5fa4024c8dc01628188119b","permalink":"/project/ssac_2020/","publishdate":"2020-03-16T00:00:00Z","relpermalink":"/project/ssac_2020/","section":"project","summary":"SSAC","tags":["Tracking Data","Basketball"],"title":"2020 MIT Sloan Sports Analytics Conference Hackathon","type":"project"},{"authors":["Peter Tea"],"categories":["Tennis"],"content":"       2019 Serving Efficiency at Grand Slams  Attribution: Special thanks to Jeff Sackmann for scraping and providing the data freely on his Github page.   Recapping the 2019 Grand Slam season With the conclusion of the 2019 Tennis season, the Big 3 (Nadal, Djokovic and Federer) all continued their domination during the largest stages of the season: the grand slam tournaments\nRafa Nadal cruised to the Roland Garros chip winning the final match in four sets against Thiem, while also capturing the US Open championship in a 5-set thriller over Medvedev.\nMeanwhile, Novak Djokovic successfully defended his Wimbledon trophy against Roger Federer in a heavy-weight 5-set match, while also capturing the Australian Open chip against Nadal.\nFinally, while Roger Federer did not win any grand slams in this 2019 season, he did reach the Wimbledon final as well as make some exciting runs at the other 3 grand slam tournaments. Not bad for the 38-year old Swiss!\n How well did the Big 3 defend and break serves? To analyse at a granular level how well the Big 3 performed during the 2019 grand slam tournaments, we look at their performances in defending their own service games and in attacking their opponent service games. A player who effectively defends their serve should win a high proportion of the games in which they serve first. Furthermore, a player who successfully attacks their opponents’ serve should win a reasonable amount of break points against their opponent’s serve.\nTo measure a players defensive and offensive ability, we look at the total number of service games defended, and the total number of opponents serves broken respectively. Moreover, to account for opportunity, we divide these metrics by the total number of player service games and opponent service games respectively.\n Proportion of service games defended = # of service games won / Total # player of service games\n Proportion of opponent service games broken = # of service games broken / Total # of opponent service games\n   What do the numbers say? After some data cleaning and aggregating steps on match summary data found on Jeff Sackmann’s Github page, we produce the following table that combines the results from all 4 grand slam tournaments from the 2019 season.\n Table 1: Grand Slam data  Player_Name Matches_Won SvGmsW_Prop BPW_Prop    Rafael Nadal 25 91.5 36.3  Novak Djokovic 22 88.6 36.4  Roger Federer 18 91.2 26.4  Kei Nishikori 14 80.2 29.5  David Goffin 11 79.2 30.5  Daniil Medvedev 11 82.3 26.7  Roberto Bautista Agut 11 86.5 25.8  Alexander Zverev 10 78.3 25.4  Stan Wawrinka 10 89.8 18.5  Grigor Dimitrov 10 85.5 22.9    During the grand slams Nadal, Djokovic and Federer are ranked 1, 2 and 3 respectively in terms of matches won. The other two columns we calculated represent the proportion of service games defended (SvGmsW_Prop), and the proportion of opponent serves broken (BPW_Prop).\n Comparing the big 3 to other ATP players via Bubble plots Using the two metrics (proportion of service games defended, and the proportion of opponent serves broken) we mapped out the defensive and offensive prowess of the Big 3 compared to the abilities of the other ATP players in the graphic below. We placed these two metrics on the x- and y-axis respectively. Additionally, to represent the success of the ATP players, we added an extra dimension that represents number of matches won by each player. The larger the bubble is, the more grand slam matches a player has won.\nFrom the above bubble plot, we make some very intuitive remarks.\nLarger bubbles are found on the top right corner of the plot. This indicates that players who are good at both defending their serve and at breaking their opponent serve tend to win more tennis matches. Unsurprisingly, since the Big 3 are good at both, their bubbles are found in the top right corner.\n ATP players tend to be better at holding serve than they are at breaking their opponent’s serve. Many of the top players hold serve at a rate of 80%, while most players are unable to break their opponent at a rate of 25%.\n ATP players that are very good at holding serve, but are average at breaking serve still tend to win a sizeable amount of matches. Conversely, players that do not defend their serve well, but who excel at breaking their opponent tend to not win many matches.\n  For those who like interactive plots as much as I do, I’ve produced the same plot using the R package gplotly.\n {\"x\":{\"data\":[{\"x\":[80.188679245283,79.2207792207792,82.3321554770318,86.4963503649635,78.2771535580524,89.7727272727273,85.4961832061069,84.9206349206349,79.4979079497908,85.6573705179283,84.8484848484848,82.7751196172249,85.8267716535433,83.9024390243902,77.9904306220096,84.4221105527638,81.6425120772947,84.3601895734597,82.1621621621622,82.2222222222222,86.9565217391304,85.945945945946,83.8323353293413,78.0487804878049,93.4131736526946,90.5405405405405,71.1111111111111,78.9808917197452,83.4285714285714,80.9523809523809,84.7368421052632,81.025641025641,83.4224598930481,83.2116788321168,83.5820895522388,75.3731343283582,74.7058823529412,84.0909090909091,82.7067669172932,89.3081761006289,72.972972972973,79.746835443038,91.8918918918919,82.1656050955414,75.3521126760563,78.8617886178862,74.1496598639456,79.8561151079137,76.9230769230769,74.6031746031746,75.5905511811024,78.6885245901639,83.4532374100719,89.6296296296296,86.9230769230769,81.4159292035398,75.8928571428571,76.9911504424779,82.4074074074074,72,70,82.7956989247312,78.2608695652174,76.3157894736842,76.6129032258064,75.8333333333333,73.6842105263158,72.0720720720721,72.1153846153846,67.8260869565217,84.5528455284553,83.3333333333333,86.3636363636364,79.4117647058823,93.3333333333333,78.5714285714286,79.4871794871795,81.9047619047619,89.7727272727273,69.620253164557,75.2941176470588,72.2222222222222,74.4444444444444,65,70.7865168539326,82.1917808219178,74.0384615384615,72.7272727272727,70.7317073170732,70.4545454545455,76.6990291262136,74.4186046511628,63.2352941176471,75.4098360655738,85.1351351351351,77.7777777777778,77.2727272727273,76.1904761904762,71.6981132075472,81.1111111111111,72.4137931034483,64.7058823529412,73.972602739726,82.9268292682927,69.8412698412698,79.5454545454545,61.1111111111111,68.5714285714286,71.6981132075472,75,80.7692307692308,88,71.4285714285714,75.3846153846154,72.0930232558139,89.8305084745763,80.3030303030303,86.6666666666667,55.5555555555556,62.5,73.3333333333333,57.5,64,77.5862068965517,72.9166666666667,69.7674418604651,60.8695652173913,81.4814814814815,78.9473684210526,71.4285714285714,83.3333333333333,55.1724137931034,81.4814814814815,76.4705882352941,69.2307692307692,71.875,74.2857142857143,66.6666666666667,76.0869565217391,71.4285714285714,64.8648648648649,69.2307692307692,75.7575757575758,64.2857142857143,50,88,61.5384615384615,50,55.5555555555556,80.7692307692308,73.3333333333333,78.9473684210526,77.2727272727273,75,75,60,41.6666666666667,71.4285714285714,60,38.4615384615385,85,57.1428571428571,80,64.2857142857143,50,38.4615384615385,50,50,50,87.5,58.3333333333333,66.6666666666667,60,50,80.7692307692308,50,71.4285714285714,73.6842105263158,65.3846153846154,58.8235294117647,33.3333333333333,60.8695652173913,62.5,76],\"y\":[29.5238095238095,30.4721030042918,26.6903914590747,25.8426966292135,25.3846153846154,18.503937007874,22.8682170542636,18.7755102040816,31.5352697095436,16.0493827160494,18.5344827586207,22.8571428571429,17.741935483871,30.3482587064677,22.8571428571429,27.6381909547739,20.5882352941176,24.5283018867925,23.4042553191489,20.4444444444444,16.2162162162162,18.0851063829787,14.8148148148148,15.9509202453988,15.6626506024096,22.7586206896552,24.8618784530387,23.2704402515723,17.9775280898876,20.7100591715976,14.9732620320856,18.4210526315789,17.4863387978142,20,18.3823529411765,28.1481481481481,24.4047619047619,16.1538461538462,20.5882352941176,10.5590062111801,23.1788079470199,20.253164556962,5.26315789473684,15.9235668789809,19.7183098591549,21.9512195121951,18.4931506849315,19.7080291970803,25,15.8730158730159,25,24.1935483870968,16.551724137931,13.4328358208955,14.6153846153846,16.6666666666667,17.5438596491228,13.2743362831858,16.5137614678899,28.125,21.2962962962963,18.6813186813187,15.7894736842105,16.6666666666667,21.9512195121951,19.5121951219512,23.4782608695652,15.929203539823,11.6504854368932,30.2521008403361,9.83606557377049,13.5593220338983,14.6788990825688,9.09090909090909,9.32203389830508,21.6216216216216,14.6341463414634,18.0952380952381,20.2247191011236,13.4146341463415,16.2790697674419,23.3333333333333,17.3913043478261,27.1604938271605,22.5806451612903,15.2777777777778,15.2380952380952,10.1123595505618,16.8674698795181,25.8426966292135,12.7450980392157,12.6436781609195,20.2898550724638,23.3333333333333,29.3333333333333,15.1515151515152,18.4615384615385,14.2857142857143,12.7272727272727,18.6813186813187,13.7931034482759,17.910447761194,15.2777777777778,7.95454545454545,7.69230769230769,16.6666666666667,5.45454545454545,8.33333333333333,21.1538461538462,21.8181818181818,15.6862745098039,14.2857142857143,17.1875,25,19.5121951219512,20.3389830508475,10.4477611940298,25.8064516129032,10.8695652173913,11.4285714285714,4.44444444444444,5.12820512820513,13.7254901960784,11.864406779661,4.16666666666667,6.66666666666667,4.54545454545455,18.5185185185185,18.4210526315789,33.3333333333333,25.8064516129032,34.4827586206897,20,16.6666666666667,34.2105263157895,13.3333333333333,8.57142857142857,20.5128205128205,18.3673469387755,3.44827586206897,10.5263157894737,28.9473684210526,8.82352941176471,7.14285714285714,7.69230769230769,7.69230769230769,0,7.69230769230769,27.7777777777778,3.84615384615385,0,20,13.6363636363636,6.25,19.047619047619,12.5,15.3846153846154,0,20,21.4285714285714,5,14.2857142857143,0,13.3333333333333,21.4285714285714,21.4285714285714,37.5,35.2941176470588,0,0,0,16.6666666666667,30,10.5263157894737,19.2307692307692,7.69230769230769,19.047619047619,18.1818181818182,25.9259259259259,16.6666666666667,0,31.8181818181818,11.7647058823529,12],\"text\":[\"Matches_Won: 14\nPlayer_Name: Kei Nishikori\",\"Matches_Won: 11\nPlayer_Name: David Goffin\",\"Matches_Won: 11\nPlayer_Name: Daniil Medvedev\",\"Matches_Won: 11\nPlayer_Name: Roberto Bautista Agut\",\"Matches_Won: 10\nPlayer_Name: Alexander Zverev\",\"Matches_Won: 10\nPlayer_Name: Stan Wawrinka\",\"Matches_Won: 10\nPlayer_Name: Grigor Dimitrov\",\"Matches_Won: 9\nPlayer_Name: Lucas Pouille\",\"Matches_Won: 9\nPlayer_Name: Diego Schwartzman\",\"Matches_Won: 9\nPlayer_Name: Matteo Berrettini\",\"Matches_Won: 8\nPlayer_Name: Marin Cilic\",\"Matches_Won: 8\nPlayer_Name: Karen Khachanov\",\"Matches_Won: 8\nPlayer_Name: Stefanos Tsitsipas\",\"Matches_Won: 8\nPlayer_Name: Gael Monfils\",\"Matches_Won: 7\nPlayer_Name: Fabio Fognini\",\"Matches_Won: 7\nPlayer_Name: Pablo Carreno Busta\",\"Matches_Won: 7\nPlayer_Name: Dominic Thiem\",\"Matches_Won: 7\nPlayer_Name: Fernando Verdasco\",\"Matches_Won: 7\nPlayer_Name: Alex De Minaur\",\"Matches_Won: 7\nPlayer_Name: Benoit Paire\",\"Matches_Won: 6\nPlayer_Name: Alexei Popyrin\",\"Matches_Won: 6\nPlayer_Name: Jan Lennard Struff\",\"Matches_Won: 5\nPlayer_Name: Leonardo Mayer\",\"Matches_Won: 5\nPlayer_Name: Joao Sousa\",\"Matches_Won: 7\nPlayer_Name: Milos Raonic\",\"Matches_Won: 6\nPlayer_Name: Borna Coric\",\"Matches_Won: 5\nPlayer_Name: Nikoloz Basilashvili\",\"Matches_Won: 5\nPlayer_Name: Daniel Evans\",\"Matches_Won: 5\nPlayer_Name: Frances Tiafoe\",\"Matches_Won: 5\nPlayer_Name: Pablo Cuevas\",\"Matches_Won: 5\nPlayer_Name: Thomas Fabbiano\",\"Matches_Won: 5\nPlayer_Name: Guido Pella\",\"Matches_Won: 5\nPlayer_Name: Tennys Sandgren\",\"Matches_Won: 4\nPlayer_Name: Jo-Wilfried Tsonga\",\"Matches_Won: 4\nPlayer_Name: Denis Shapovalov\",\"Matches_Won: 4\nPlayer_Name: Gilles Simon\",\"Matches_Won: 4\nPlayer_Name: Filip Krajinovic\",\"Matches_Won: 4\nPlayer_Name: Taylor Fritz\",\"Matches_Won: 4\nPlayer_Name: Jordan Thompson\",\"Matches_Won: 4\nPlayer_Name: Reilly Opelka\",\"Matches_Won: 4\nPlayer_Name: Denis Kudla\",\"Matches_Won: 4\nPlayer_Name: Mikhail Kukushkin\",\"Matches_Won: 3\nPlayer_Name: Ivo Karlovic\",\"Matches_Won: 3\nPlayer_Name: Jeremy Chardy\",\"Matches_Won: 3\nPlayer_Name: Pierre Hugues Herbert\",\"Matches_Won: 3\nPlayer_Name: John Millman\",\"Matches_Won: 3\nPlayer_Name: Yoshihito Nishioka\",\"Matches_Won: 3\nPlayer_Name: Andreas Seppi\",\"Matches_Won: 3\nPlayer_Name: Dusan Lajovic\",\"Matches_Won: 3\nPlayer_Name: Laslo Djere\",\"Matches_Won: 4\nPlayer_Name: Juan Ignacio Londero\",\"Matches_Won: 3\nPlayer_Name: Miomir Kecmanovic\",\"Matches_Won: 3\nPlayer_Name: Ugo Humbert\",\"Matches_Won: 3\nPlayer_Name: Feliciano Lopez\",\"Matches_Won: 4\nPlayer_Name: Sam Querrey\",\"Matches_Won: 4\nPlayer_Name: Andrey Rublev\",\"Matches_Won: 3\nPlayer_Name: Pablo Andujar\",\"Matches_Won: 2\nPlayer_Name: Marius Copil\",\"Matches_Won: 2\nPlayer_Name: Philipp Kohlschreiber\",\"Matches_Won: 2\nPlayer_Name: Marton Fucsovics\",\"Matches_Won: 2\nPlayer_Name: Radu Albot\",\"Matches_Won: 3\nPlayer_Name: Tomas Berdych\",\"Matches_Won: 2\nPlayer_Name: Robin Haase\",\"Matches_Won: 3\nPlayer_Name: Henri Laaksonen\",\"Matches_Won: 3\nPlayer_Name: Alexander Bublik\",\"Matches_Won: 2\nPlayer_Name: Kyle Edmund\",\"Matches_Won: 3\nPlayer_Name: Gregoire Barrere\",\"Matches_Won: 2\nPlayer_Name: Martin Klizan\",\"Matches_Won: 2\nPlayer_Name: Christian Garin\",\"Matches_Won: 3\nPlayer_Name: Corentin Moutet\",\"Matches_Won: 2\nPlayer_Name: Hubert Hurkacz\",\"Matches_Won: 2\nPlayer_Name: Jiri Vesely\",\"Matches_Won: 3\nPlayer_Name: Nick Kyrgios\",\"Matches_Won: 2\nPlayer_Name: Steve Johnson\",\"Matches_Won: 3\nPlayer_Name: John Isner\",\"Matches_Won: 4\nPlayer_Name: Dominik Koepfer\",\"Matches_Won: 2\nPlayer_Name: Aljaz Bedene\",\"Matches_Won: 3\nPlayer_Name: Hyeon Chung\",\"Matches_Won: 3\nPlayer_Name: Kevin Anderson\",\"Matches_Won: 1\nPlayer_Name: Lloyd Harris\",\"Matches_Won: 1\nPlayer_Name: Federico Delbonis\",\"Matches_Won: 3\nPlayer_Name: Antoine Hoang\",\"Matches_Won: 1\nPlayer_Name: Adrian Mannarino\",\"Matches_Won: 2\nPlayer_Name: Hugo Dellien\",\"Matches_Won: 1\nPlayer_Name: Roberto Carballes Baena\",\"Matches_Won: 2\nPlayer_Name: Casper Ruud\",\"Matches_Won: 1\nPlayer_Name: Janko Tipsarevic\",\"Matches_Won: 2\nPlayer_Name: Ricardas Berankis\",\"Matches_Won: 1\nPlayer_Name: Cameron Norrie\",\"Matches_Won: 1\nPlayer_Name: Damir Dzumhur\",\"Matches_Won: 2\nPlayer_Name: Kamil Majchrzak\",\"Matches_Won: 1\nPlayer_Name: Bradley Klahn\",\"Matches_Won: 1\nPlayer_Name: Matthew Ebden\",\"Matches_Won: 2\nPlayer_Name: Salvatore Caruso\",\"Matches_Won: 3\nPlayer_Name: Juan Martin del Potro\",\"Matches_Won: 1\nPlayer_Name: Richard Gasquet\",\"Matches_Won: 2\nPlayer_Name: Felix Auger Aliassime\",\"Matches_Won: 1\nPlayer_Name: Marcel Granollers\",\"Matches_Won: 1\nPlayer_Name: Steve Darcis\",\"Matches_Won: 2\nPlayer_Name: Paolo Lorenzi\",\"Matches_Won: 1\nPlayer_Name: Lorenzo Sonego\",\"Matches_Won: 1\nPlayer_Name: Cedrik Marcel Stebe\",\"Matches_Won: 0\nPlayer_Name: Jaume Munar\",\"Matches_Won: 0\nPlayer_Name: Nicolas Jarry\",\"Matches_Won: 0\nPlayer_Name: Albert Ramos\",\"Matches_Won: 0\nPlayer_Name: Marco Cecchinato\",\"Matches_Won: 0\nPlayer_Name: Prajnesh Gunneswaran\",\"Matches_Won: 1\nPlayer_Name: Taro Daniel\",\"Matches_Won: 1\nPlayer_Name: Ilya Ivashka\",\"Matches_Won: 2\nPlayer_Name: Alex Bolt\",\"Matches_Won: 1\nPlayer_Name: Evgeny Donskoy\",\"Matches_Won: 1\nPlayer_Name: Maximilian Marterer\",\"Matches_Won: 1\nPlayer_Name: Mackenzie McDonald\",\"Matches_Won: 1\nPlayer_Name: Stefano Travaglia\",\"Matches_Won: 1\nPlayer_Name: Elliot Benchetrit\",\"Matches_Won: 2\nPlayer_Name: Nicolas Mahut\",\"Matches_Won: 1\nPlayer_Name: Vasek Pospisil\",\"Matches_Won: 1\nPlayer_Name: Thanasi Kokkinakis\",\"Matches_Won: 0\nPlayer_Name: Malek Jaziri\",\"Matches_Won: 0\nPlayer_Name: Ernests Gulbis\",\"Matches_Won: 0\nPlayer_Name: Mischa Zverev\",\"Matches_Won: 0\nPlayer_Name: Bernard Tomic\",\"Matches_Won: 0\nPlayer_Name: Peter Gojowczyk\",\"Matches_Won: 0\nPlayer_Name: Guido Andreozzi\",\"Matches_Won: 0\nPlayer_Name: Guillermo Garcia Lopez\",\"Matches_Won: 0\nPlayer_Name: Thiago Monteiro\",\"Matches_Won: 0\nPlayer_Name: Jozef Kovalik\",\"Matches_Won: 1\nPlayer_Name: Ryan Harrison\",\"Matches_Won: 1\nPlayer_Name: Viktor Troicki\",\"Matches_Won: 1\nPlayer_Name: Mikael Ymer\",\"Matches_Won: 1\nPlayer_Name: Oscar Otte\",\"Matches_Won: 1\nPlayer_Name: Yannick Maden\",\"Matches_Won: 1\nPlayer_Name: Marcos Baghdatis\",\"Matches_Won: 1\nPlayer_Name: Jay Clarke\",\"Matches_Won: 1\nPlayer_Name: Jenson Brooksby\",\"Matches_Won: 1\nPlayer_Name: Egor Gerasimov\",\"Matches_Won: 0\nPlayer_Name: Jack Sock\",\"Matches_Won: 0\nPlayer_Name: Bjorn Fratangelo\",\"Matches_Won: 0\nPlayer_Name: Christopher Eubanks\",\"Matches_Won: 0\nPlayer_Name: Denis Istomin\",\"Matches_Won: 0\nPlayer_Name: Rudolf Molleker\",\"Matches_Won: 0\nPlayer_Name: Soon Woo Kwon\",\"Matches_Won: 0\nPlayer_Name: Marcos Giron\",\"Matches_Won: 0\nPlayer_Name: Brayden Schnur\",\"Matches_Won: 0\nPlayer_Name: Mitchell Krueger\",\"Matches_Won: 0\nPlayer_Name: Luca Vanni\",\"Matches_Won: 0\nPlayer_Name: Zhe Li\",\"Matches_Won: 0\nPlayer_Name: Gleb Sakharov\",\"Matches_Won: 0\nPlayer_Name: Michael Mmoh\",\"Matches_Won: 0\nPlayer_Name: Andy Murray\",\"Matches_Won: 0\nPlayer_Name: Tatsuma Ito\",\"Matches_Won: 0\nPlayer_Name: Jason Kubler\",\"Matches_Won: 0\nPlayer_Name: Marc Polmans\",\"Matches_Won: 0\nPlayer_Name: Pedro Sousa\",\"Matches_Won: 0\nPlayer_Name: Mirza Basic\",\"Matches_Won: 0\nPlayer_Name: James Duckworth\",\"Matches_Won: 0\nPlayer_Name: Pedro Martinez\",\"Matches_Won: 0\nPlayer_Name: Sergiy Stakhovsky\",\"Matches_Won: 0\nPlayer_Name: Lukas Rosol\",\"Matches_Won: 0\nPlayer_Name: Blaz Rola\",\"Matches_Won: 0\nPlayer_Name: Tommy Paul\",\"Matches_Won: 0\nPlayer_Name: Maxime Janvier\",\"Matches_Won: 0\nPlayer_Name: Simone Bolelli\",\"Matches_Won: 0\nPlayer_Name: Alejandro Davidovich Fokina\",\"Matches_Won: 0\nPlayer_Name: Alexandre Muller\",\"Matches_Won: 0\nPlayer_Name: Quentin Halys\",\"Matches_Won: 0\nPlayer_Name: Alexey Vatutin\",\"Matches_Won: 0\nPlayer_Name: Kimmer Coppejans\",\"Matches_Won: 0\nPlayer_Name: Yannick Hanfmann\",\"Matches_Won: 0\nPlayer_Name: Andrea Arnaboldi\",\"Matches_Won: 0\nPlayer_Name: Ruben Bemelmans\",\"Matches_Won: 0\nPlayer_Name: Yasutaka Uchiyama\",\"Matches_Won: 0\nPlayer_Name: Dennis Novak\",\"Matches_Won: 0\nPlayer_Name: Paul Jubb\",\"Matches_Won: 0\nPlayer_Name: James Ward\",\"Matches_Won: 0\nPlayer_Name: Yuichi Sugita\",\"Matches_Won: 0\nPlayer_Name: Noah Rubin\",\"Matches_Won: 0\nPlayer_Name: Jannik Sinner\",\"Matches_Won: 0\nPlayer_Name: Zachary Svajda\",\"Matches_Won: 0\nPlayer_Name: Sumit Nagal\",\"Matches_Won: 0\nPlayer_Name: Marco Trungelliti\",\"Matches_Won: 0\nPlayer_Name: Santiago Giraldo\",\"Matches_Won: 0\nPlayer_Name: Tobias Kamke\",\"Matches_Won: 0\nPlayer_Name: Ernesto Escobedo\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,128,128,1)\",\"opacity\":0.8,\"size\":[22.7218343474753,20.1836869370515,20.1836869370515,20.1836869370515,19.2619793501709,19.2619793501709,19.2619793501709,18.2929133858268,18.2929133858268,18.2929133858268,17.268339617382,17.268339617382,17.268339617382,17.268339617382,16.1774629473337,16.1774629473337,16.1774629473337,16.1774629473337,16.1774629473337,16.1774629473337,15.005456857691,15.005456857691,13.7309760168176,13.7309760168176,16.1774629473337,15.005456857691,13.7309760168176,13.7309760168176,13.7309760168176,13.7309760168176,13.7309760168176,13.7309760168176,13.7309760168176,12.3212598425197,12.3212598425197,12.3212598425197,12.3212598425197,12.3212598425197,12.3212598425197,12.3212598425197,12.3212598425197,12.3212598425197,10.7211600981121,10.7211600981121,10.7211600981121,10.7211600981121,10.7211600981121,10.7211600981121,10.7211600981121,10.7211600981121,12.3212598425197,10.7211600981121,10.7211600981121,10.7211600981121,12.3212598425197,12.3212598425197,10.7211600981121,8.82314618664374,8.82314618664374,8.82314618664374,8.82314618664374,10.7211600981121,8.82314618664374,10.7211600981121,10.7211600981121,8.82314618664374,10.7211600981121,8.82314618664374,8.82314618664374,10.7211600981121,8.82314618664374,8.82314618664374,10.7211600981121,8.82314618664374,10.7211600981121,12.3212598425197,8.82314618664374,10.7211600981121,10.7211600981121,6.3496062992126,6.3496062992126,10.7211600981121,6.3496062992126,8.82314618664374,6.3496062992126,8.82314618664374,6.3496062992126,8.82314618664374,6.3496062992126,6.3496062992126,8.82314618664374,6.3496062992126,6.3496062992126,8.82314618664374,10.7211600981121,6.3496062992126,8.82314618664374,6.3496062992126,6.3496062992126,8.82314618664374,6.3496062992126,6.3496062992126,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,6.3496062992126,6.3496062992126,8.82314618664374,6.3496062992126,6.3496062992126,6.3496062992126,6.3496062992126,6.3496062992126,8.82314618664374,6.3496062992126,6.3496062992126,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,6.3496062992126,6.3496062992126,6.3496062992126,6.3496062992126,6.3496062992126,6.3496062992126,6.3496062992126,6.3496062992126,6.3496062992126,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512,0.377952755905512],\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,128,128,1)\"}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[82.1486486486487],\"y\":[36.3636363636364],\"text\":\"Djokovic\",\"hovertext\":\"Matches_Won: 4\nPlayer_Name: Djokovic\",\"textfont\":{\"size\":15.1181102362205,\"color\":\"rgba(0,0,255,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[91.5167095115681],\"y\":[32.2903225806452],\"text\":\"Nadal\",\"hovertext\":\"Matches_Won: 4\nPlayer_Name: Nadal\",\"textfont\":{\"size\":15.1181102362205,\"color\":\"rgba(255,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[91.1764705882353],\"y\":[29.3586956521739],\"text\":\"Federer\",\"hovertext\":\"Matches_Won: 4\nPlayer_Name: Federer\",\"textfont\":{\"size\":15.1181102362205,\"color\":\"rgba(34,139,34,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[88.6486486486487],\"y\":[36.3636363636364],\"text\":\"Matches_Won: 22\nMatches_Won: 22\nPlayer_Name: Novak Djokovic\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,0,255,1)\",\"opacity\":0.7,\"size\":28.3874906476385,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,0,255,1)\"}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[91.1764705882353],\"y\":[26.3586956521739],\"text\":\"Matches_Won: 18\nMatches_Won: 18\nPlayer_Name: Roger Federer\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(34,139,34,1)\",\"opacity\":0.7,\"size\":25.7135330481202,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(34,139,34,1)\"}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[91.5167095115681],\"y\":[36.2903225806452],\"text\":\"Matches_Won: 25\nMatches_Won: 25\nPlayer_Name: Rafael Nadal\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,0,0,1)\",\"opacity\":0.7,\"size\":30.2362204724409,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,0,0,1)\"}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":49.6073059360731,\"r\":7.30593607305936,\"b\":42.8393524283935,\"l\":39.9169779991698},\"plot_bgcolor\":\"rgba(241,248,247,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"title\":{\"text\":\" 2019 Grand Slam Season \",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":23.37899543379},\"x\":0.5,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[30.3293413173653,96.4171656686627],\"tickmode\":\"array\",\"ticktext\":[null,\"40\",\"60\",\"80\",null],\"tickvals\":[null,40,60,80,null],\"categoryorder\":\"array\",\"categoryarray\":[null,\"40\",\"60\",\"80\",null],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\" % Service Games Held \",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.2685761726858}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-1.875,39.375],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"10\",\"20\",\"30\",null],\"tickvals\":[0,10,20,30,null],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"10\",\"20\",\"30\",null],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\" % Service Games Broken \",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.2685761726858}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"rgba(190,190,190,1)\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"df8246bb7d36\":{\"x\":{},\"y\":{},\"size\":{},\"label\":{},\"type\":\"scatter\"},\"df823f198881\":{\"label\":{},\"x\":{},\"y\":{},\"size\":{},\"label.1\":{}},\"df822550ed84\":{\"label\":{},\"x\":{},\"y\":{},\"size\":{},\"label.1\":{}},\"df826419883f\":{\"label\":{},\"x\":{},\"y\":{},\"size\":{},\"label.1\":{}},\"df8248401370\":{\"x\":{},\"y\":{},\"size\":{},\"x.1\":{},\"y.1\":{},\"size.1\":{},\"label\":{}},\"df8266bc431e\":{\"x\":{},\"y\":{},\"size\":{},\"x.1\":{},\"y.1\":{},\"size.1\":{},\"label\":{}},\"df8251da9b43\":{\"x\":{},\"y\":{},\"size\":{},\"x.1\":{},\"y.1\":{},\"size.1\":{},\"label\":{}}},\"cur_data\":\"df8246bb7d36\",\"visdat\":{\"df8246bb7d36\":[\"function (y) \",\"x\"],\"df823f198881\":[\"function (y) \",\"x\"],\"df822550ed84\":[\"function (y) \",\"x\"],\"df826419883f\":[\"function (y) \",\"x\"],\"df8248401370\":[\"function (y) \",\"x\"],\"df8266bc431e\":[\"function (y) \",\"x\"],\"df8251da9b43\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} All R codes to produce this analysis can be found on my Github page.\n  ","date":1582675200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1582675200,"objectID":"e11d7c876e99756c46aa36848f075ffd","permalink":"/post/2019-grand-slam/","publishdate":"2020-02-26T00:00:00Z","relpermalink":"/post/2019-grand-slam/","section":"post","summary":"Serving Grand Slams","tags":["Bubble plot","Tennis"],"title":"ATP Serve Performances at the Grand Slams","type":"post"},{"authors":["Peter Tea"],"categories":["Basketball"],"content":" All-NBA Selection Table of contents Introduction: All-NBA Selection Obtaining/Scraping Data Exploratory Data Analysis Fitting GAM Model  All-NBA Selection  The All-NBA team is an annual NBA distinction awarded to players with outstanding peformances at the end of each NBA season. Since the 1989 season, the All-NBA team is composed of three sub All-NBA teams (i.e. 1st All-NBA, 2nd All-NBA and 3rd All-NBA) where each team is composed of 2 guards, 2 forwards and 1 center. In total, 6 guards, 6 forwards and 3 centers are selected for the All-NBA team.\nSelection is controlled by a panel of sportswriters and broadcasters (i.e. the media) who select players for the All-NBA 1st, 2nd and 3rd Teams by position. A tally of all the votes are then taken to determine the results of All-NBA selections for all three teams. Players placed on a 1st All-NBA team ballot are awarded 5 points, while players placed on a 2nd All-NBA team ballot are awarded 3 points and 1 point for a 3rd All-NBA team ballot. The implications of the All-NBA team are not only of financial incentive, but also for reputation as inclusion to this team might validate the stardom of NBA players.\nIn this project, we build models to predict which players will form all 3 All-NBA teams. We first collect end-of-season boxscore statistics since the 1989 NBA season to train and test our prediction models. Then, we make our predictions for the All-NBA team for this current 2020 NBA season. We decided to look at statistics on a per 100 possessions metric to account for fluctuating pace of play across different NBA seasons.\n  Obtaining/Scraping NBA Data  We first scrape historic end-of-season boxscore statistics for NBA players using the bballR R package. As stated previously, we are interested in box-score metrics on a per 100 possessions scale, which the bballR R package can easily provide.\n1989 - 2019 Player per 100 possessions Data We first present code on collecting end-of season box-score statistics (per 100 possessions), and saving them into .RDS files using the bballR R package. We decide to only keep player seaason records where the player played at least 100 minutes. We add in this criterion since having players who play limited minutes are likely not going to be considered for the All-NBA teams.\n##### --------------- Using bballR package to scrape historical data --------------- ##### setwd(\u0026quot;~/Documents/Sports-Analytics/NBA/Data\u0026quot;) # --\u0026gt; Set current working directory to where we want to save data # Use the bballR package to gather some end of season boxscore stats #install.packages(\u0026quot;remotes\u0026quot;) #remotes::install_github(\u0026quot;bobbyingram/bballR\u0026quot;) # --\u0026gt; Load all libraries we will need library(bballR) # --\u0026gt; First scrape key data outlining info on all NBA players (this may help with merging datasets later on) players_dat \u0026lt;- bballR::scrape_all_players() # --\u0026gt; Save file saveRDS(players_dat, file = \u0026quot;players_dat.RDS\u0026quot;) # Data Key: https://rdrr.io/github/bobbyingram/bballR/man/scrape_all_players.html # --\u0026gt; Second, scrape end of season boxscore statistics (per 100 possessions) from the 1989 season to the previous 2019 NBA season. for (year in 1989:2019){ filename = paste(\u0026quot;NBA_\u0026quot;, year, \u0026quot;_P100P.RDS\u0026quot;, sep = \u0026quot;\u0026quot; ) saveRDS(bballR::scrape_season_per_100_poss(year), file = filename) } #https://rdrr.io/github/bobbyingram/bballR/man/scrape_season_per_100_poss.html # --\u0026gt; Combine all seasons into a single \u0026quot;master file\u0026quot; # --\u0026gt; Only include players who played more than 100 minutes a season Historical_dat_1989_2019 \u0026lt;- data.frame() for( year in 1990:2019){ dat \u0026lt;- readRDS(paste(\u0026quot;NBA_\u0026quot;, year, \u0026quot;_P100P.RDS\u0026quot;, sep = \u0026quot;\u0026quot; )) dat \u0026lt;- dat %\u0026gt;% filter(MP \u0026gt; 100) %\u0026gt;% filter(Tm != \u0026quot;TOT\u0026quot;) %\u0026gt;% mutate(Year = year) Historical_dat_1989_2019 \u0026lt;- rbind(Historical_dat_1989_2019, dat) }  1989 - 2019 All-NBA Player Selections The previous code saved each season’s per 100 possesion box-score statistics in separate .RDS files. Now, we will need to scrape data that indicates which players won All-NBA team awards at the end of each season. Unfortunately, the bballR R package does not include functions that scrape this type of information for us. Instead, we will scrape this information ourselves.\nA list of All-NBA teams can be found on basketball-reference. We will use the rVest R package to scrape this data into a clean .RDS file as shown in the code below:\n# ----- Get list of player names who made the ALL - NBA Teams ----- # library(rvest) library(dplyr) my_url \u0026lt;- read_html(\u0026quot;https://www.basketball-reference.com/awards/all_league.html\u0026quot;) node \u0026lt;- \u0026quot;tbody .left , .right\u0026quot; # Node found using InspectorGadget chrome tool. scraped_data \u0026lt;- my_url %\u0026gt;% html_nodes(node) %\u0026gt;% html_text() dummy\u0026lt;- scraped_data[1:984] # Anything past the 984th element of the list is not required # Remove empty elements from the list to_remove \u0026lt;- c() for (i in seq(from=25, to = 953, by = 32)){ ind \u0026lt;- seq(from = i, to = i+7, by = 1) to_remove \u0026lt;- c(to_remove, ind) } dummy \u0026lt;- dummy[-to_remove] # Remove entries that indicate type of All-NBA team awarded to_remove2 \u0026lt;- which(grepl(\u0026quot;0|1|2|3|NBA\u0026quot;, dummy)) players \u0026lt;- dummy[-to_remove2] # Initialize data frame... year \u0026lt;- rep(2019:1989, each = 15) team \u0026lt;- rep(rep(1:3, each = 5), times = 31) ALL_NBA_data \u0026lt;- data.frame(Year = year, Team = team, Player = players, stringsAsFactors = F) %\u0026gt;% mutate(Position = substr(Player, start = nchar(Player), stop = nchar(Player)), Player = substr(Player, 1, nchar(Player) - 2) )  Now that we have collected historic box-score statistics after each NBA season, and also collected the names of the players who won All-NBA after those seasons, the next step is to combine these two datasets together.\n# Create an ID that will match the box-score dataset to_test \u0026lt;- paste(ALL_NBA_data$Player, ALL_NBA_data$Year, sep =\u0026quot;-\u0026quot;) # Add column of 1 if player made All-NBA that season, and 0 if they did not. # Also, adjust position to be G, F or C. Historical_dat_1989_2019 \u0026lt;- Historical_dat_1989_2019 %\u0026gt;% mutate(ID = paste(Player, Year, sep = \u0026quot;-\u0026quot;), ALL_NBA = ifelse(ID %in% to_test, 1, 0), New_Pos = ifelse(\u0026quot;G\u0026quot; == substr(Pos,2,2), \u0026quot;G\u0026quot;, ifelse(\u0026quot;F\u0026quot; == substr(Pos,2,2), \u0026quot;F\u0026quot;, \u0026quot;C\u0026quot;) )) #Historical_dat_1989_2019 %\u0026gt;% group_by(Year) %\u0026gt;% # summarise(n = sum(ALL_NBA)) %\u0026gt;% View() # --\u0026gt; Two years have \u0026quot;16\u0026quot; players winning All-NBA # --\u0026gt; This is just one player being traded during season (playing for two different teams) saveRDS(Historical_dat_1989_2019, file = \u0026quot;Historical_dat_1989_2019.RDS\u0026quot;)  Current 2020 Player per 100 possessions Data Later on in our report, we will predict who will be included in this year’s All-NBA team. To do this, we will need to scrape the current season box-score statistics (per 100 possessions). Again, we will use basketball-reference and the R package rVest.\n##### ----- Get current per 100 possession season stats ----- ##### my_url \u0026lt;- read_html(\u0026quot;https://www.basketball-reference.com/leagues/NBA_2020_per_poss.html\u0026quot;) node \u0026lt;- \u0026quot;.left , .right , .center\u0026quot; scraped_data \u0026lt;- my_url %\u0026gt;% html_nodes(node) %\u0026gt;% html_text() # Remove the \u0026quot;Rk\u0026quot; column from data #Rk_ind \u0026lt;- which(scraped_data == \u0026quot;Rk\u0026quot;)[-1] each_row \u0026lt;- seq(from = 33, to = length(scraped_data) - 32, by = 32) col_names = scraped_data[1:32] dat = matrix(ncol = 32) for (i in each_row){ dat \u0026lt;- rbind(dat, scraped_data[i:(i+31)]) } colnames(dat) \u0026lt;- col_names Current_season_dat \u0026lt;- as.data.frame(dat, stringsAsFactors = FALSE) Current_season_dat \u0026lt;- Current_season_dat[-which(Current_season_dat$Rk == \u0026quot;Rk\u0026quot;), ] Current_season_dat[c(4, 6:32)] \u0026lt;- sapply(Current_season_dat[c(4, 6:32)], as.numeric) Current_season_dat \u0026lt;- Current_season_dat[-1, -30] saveRDS(Current_season_dat, file = \u0026quot;~/Documents/Sports-Analytics/NBA/Data/Current_season_dat.RDS\u0026quot;)   Exploratory Data Analysis  After all that heavy lifting, we now present some basic exploratory data analysis on our collected data. For the purposes of this project, we decided to focus only on players who have played at least 100 minutes in a given season. This condition removes players who are not full-time NBA players and hence better represents a sample of NBA players who are more inclined to be selected for the All-NBA teams.\nWe first present a simple correlation plot between 14 different boxscore metrics for these NBA players. These metrics include:\n PTS: Points scored per 100 possessions AST: Assists per 100 possessions STL: Steals per 100 possessions BLK: Blocks per 100 possessions MP: Minutes played ORB: Offensive rebounds per 100 possessions DRB: Defensive rebounds per 100 possessions TOV: Turnovers per 100 possessions PF: Personal fouls per 100 possessions ORtg: Offensive rating (An estimate of points produced per 100 possessions) DRtg: Defensive rating (An estimate of points allowed per 100 possessions)  ########### # --\u0026gt; Exploratory correlation plot b/n variables library(ggcorrplot) library(dplyr) corr_mat \u0026lt;- Historical_dat_1990_2019 %\u0026gt;% select(PTS, AST, STL, BLK, MP, ORB, DRB, TOV, PF, ORtg, DRtg) %\u0026gt;% cor() %\u0026gt;% round(1) ggcorrplot(corr_mat, type = \u0026quot;lower\u0026quot;, colors = c(\u0026quot;#FF0000\u0026quot;, \u0026quot;#FFFFF0\u0026quot; , \u0026quot;#4169E1\u0026quot;), outline.col = \u0026quot;black\u0026quot;, lab = T, ggtheme = theme_classic(), title = \u0026quot;Correlation of per 100 possession boxscore stats\u0026quot;, legend.title = \u0026quot;Correlation\u0026quot;, lab_size = 3) From the correlation plot above, we see that there exists strong linear relationships between a player’s Offensive Rebounding numbers with their Defensive Rebounding numbers and number of Blocks. This is unsurprising since players who grab rebounds and block shots tend to be near the rim, and hence will have a tendency to perform both roles of grabbing rebounds and blocking shots. Turnovers and assists also tend to be related as well since decision makers whose job is to set up their teamates through assists, may be more liable to turn the ball over as well.\n Fitting GAM Models  To predict whether a player will be selected or not for an All-NBA team, we use GAM models. In the context of our problem, a GLM (i.e. logistic regression) could be used to estimate the log odds (a function of a success probability) of a player reaching All-NBA status, given his in season performance. However, GLM models assume a linear relationship (i.e. a parametric form) between the covariates and the log-odds of All-NBA selection which may not be true. GAM models on the other hand do not assume a priori any specific structure for the relationship between boxscore stats and the outcome of All-NBA selection. In fact, GAMs can be used to model non-linear effects of the covariates on the response variable. In a sense, we can consider GAM models as a more flexible version of GLM models. GAMs have the abililty to model these non-linear relationships using spline functions. More information on GAMs can be found here.\nTo further reduce noise, we also only chose to look at player season records where the player played atleast 5 games (in addition to playing at least 100 total minutes). The rationale is that players who do not meet the above criteria are likely not considered from All-NBA selection.\nHistorical_dat_1990_2019 \u0026lt;- Historical_dat_1990_2019 %\u0026gt;% filter(G \u0026gt; 5 \u0026amp; MP \u0026gt; 100) Next up, we’ll set up our training and testing sets to inform us on the quality of the fit of our models. We chose the conventional 70 % split for the training set and 30 % to the test set. To ensure that there are an adequate amount of outcomes in each of the training and test sets, we allocate total years to each set. That is, since we have a total of 31 years, we allocate 0.3 x 30 = 9 years of data to the testing set and the remaining 22 years of data to the training set.\nTo evaluate the predictive performances of our GAM models, we look at their classification rates on the testing set. Here, in our calculations for classification rates, we will only consider the amount of correct All-NBA predictions. That is, among the players who actually won All-NBA, how many did we correctly predict that they would win. A classification rate that considers correct classification among those who did not win All-NBA would not be very informative since the majority of players do not win All-NBA.\n# Create Training (70%) - Testing (30%) split # In total, we have 30 years of data. # --\u0026gt; Training set will have 21 years worth of data, Testing set will have 9 years worth of data set.seed(824) # --\u0026gt; RIP Kobe and Gianna Bryant # Randomly select 9 years: possible_years \u0026lt;- 1990:2019 test_years \u0026lt;- sort(sample(x=possible_years, size = 9)) train_years \u0026lt;- sort(possible_years[is.na(pmatch(possible_years, test_years))]) train_dat \u0026lt;- Historical_dat_1990_2019 %\u0026gt;% filter(Year %in% train_years) %\u0026gt;% select(New_Pos, PTS, AST, STL, BLK, MP, ORB, DRB, TOV, PF, ORtg, DRtg, FT, FG, FGA, Year, Player, ALL_NBA) test_dat \u0026lt;- Historical_dat_1990_2019 %\u0026gt;% filter(Year %in% test_years) %\u0026gt;% select(New_Pos, PTS, AST, STL, BLK, MP, ORB, DRB, TOV, PF, ORtg, DRtg, FT, FG, FGA, Year, Player, ALL_NBA) GAM Model Here is the fitting of a GAM model to our training set.\nlibrary(mgcv) gen_mod = gam(ALL_NBA ~ s(PTS) + s(AST) + s(STL) + s(BLK) + s(MP) + s(ORB) + s(DRB) + s(TOV) + s(PF) + s(ORtg) + s(DRtg) + s(FT) + s(FG) + s(FGA) + New_Pos, data = train_dat, family = binomial, method = \u0026quot;REML\u0026quot;) summary(gen_mod) ## ## Family: binomial ## Link function: logit ## ## Formula: ## ALL_NBA ~ s(PTS) + s(AST) + s(STL) + s(BLK) + s(MP) + s(ORB) + ## s(DRB) + s(TOV) + s(PF) + s(ORtg) + s(DRtg) + s(FT) + s(FG) + ## s(FGA) + New_Pos ## ## Parametric coefficients: ## Estimate Std. Error z value Pr(\u0026gt;|z|) ## (Intercept) -11.1535 0.7598 -14.679 \u0026lt;2e-16 *** ## New_PosF -0.2974 0.4063 -0.732 0.4643 ## New_PosG -1.2459 0.6069 -2.053 0.0401 * ## --- ## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1 ## ## Approximate significance of smooth terms: ## edf Ref.df Chi.sq p-value ## s(PTS) 1.000 1.001 7.245 0.00713 ** ## s(AST) 1.535 1.913 24.477 4.54e-05 *** ## s(STL) 3.018 3.744 7.469 0.09130 . ## s(BLK) 1.000 1.000 0.318 0.57274 ## s(MP) 1.150 1.284 92.432 \u0026lt; 2e-16 *** ## s(ORB) 1.000 1.000 2.993 0.08364 . ## s(DRB) 4.690 5.756 12.732 0.02963 * ## s(TOV) 1.000 1.000 0.015 0.90325 ## s(PF) 1.000 1.000 15.933 6.56e-05 *** ## s(ORtg) 1.000 1.000 5.875 0.01536 * ## s(DRtg) 1.398 1.709 94.097 \u0026lt; 2e-16 *** ## s(FT) 2.993 3.777 9.284 0.03331 * ## s(FG) 4.296 5.246 16.078 0.00838 ** ## s(FGA) 2.676 3.457 5.696 0.16203 ## --- ## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1 ## ## R-sq.(adj) = 0.703 Deviance explained = 78.4% ## -REML = 331.67 Scale est. = 1 n = 9289 The summary of our fitted Guards GAM model is shown below. To inspect the degree of wiggliness in our fitted model, we look at the edf (estimated degrees of freedom). Terms with edf values equal to 1 represent fitted splines which are linear; edf values equal to 2 represent fitted splines which are quadratic; larger edf values represent splines that are increasingly non-linear (i.e. higher EDF value implies more complex splines). In our model, the 5 statistically significant covariates (at level 5%) all have edf \u0026gt; 1.\nFrom the summary of this GAM model, we see that Assists Minutes and Defensive Rating were the strongest influencers on whether a player was awarded All-NBA. Additionally, 78.4 % of the deviance was explained by this model.\n  Evaluating GAM Model Performance Using our fitted model, we now predict how well it classifies All-NBA selection in our testing set.\npredicted_probs \u0026lt;- predict(gen_mod, test_dat, type = \u0026quot;response\u0026quot;) Results_dat \u0026lt;- cbind(test_dat, predicted_probs) correct_G_vector \u0026lt;- vector() for(year in test_years){ how_many \u0026lt;- Results_dat %\u0026gt;% filter(Year == year \u0026amp; New_Pos == \u0026quot;G\u0026quot;) %\u0026gt;% arrange(desc(predicted_probs)) %\u0026gt;% select(ALL_NBA) %\u0026gt;% head(6) %\u0026gt;% sum() correct_G_vector \u0026lt;- append(correct_G_vector, how_many) } names(correct_G_vector) \u0026lt;- test_years #correct_G_vector correct_vector_F \u0026lt;- vector() for(year in test_years){ how_many \u0026lt;- Results_dat %\u0026gt;% filter(Year == year \u0026amp; New_Pos == \u0026quot;F\u0026quot;) %\u0026gt;% arrange(desc(predicted_probs)) %\u0026gt;% select(ALL_NBA) %\u0026gt;% head(6) %\u0026gt;% sum() correct_vector_F \u0026lt;- append(correct_vector_F, how_many) } names(correct_vector_F) \u0026lt;- test_years #correct_vector_F correct_vector_C \u0026lt;- vector() for(year in test_years){ how_many \u0026lt;- Results_dat %\u0026gt;% filter(Year == year \u0026amp; New_Pos == \u0026quot;C\u0026quot;) %\u0026gt;% arrange(desc(predicted_probs)) %\u0026gt;% select(ALL_NBA) %\u0026gt;% head(3) %\u0026gt;% sum() correct_vector_C \u0026lt;- append(correct_vector_C, how_many) } names(correct_vector_C) \u0026lt;- test_years #correct_vector_C Guards Result  Table 1: Classification Rate of Guards  1990 1993 1994 1996 1999 2000 2002 2005 2010    5 4 3 4 4 5 5 4 4    In the above table 1, we present the number of correct players classified into the All-NBA team. Note that each year, 6 guards are chosen for All- NBA. The results indicate an overall classification rate of 70 % in the testing dataset.\n Forwards Result  Table 2: Classification Rate of Forwards  1990 1993 1994 1996 1999 2000 2002 2005 2010    4 6 4 5 4 6 3 5 4    In the above table 2, we present the number of correct players classified into the All-NBA team. Note that each year, 6 forwardss are chosen for All- NBA. The results indicate an overall classification rate of 76 % in the testing dataset.\n Centers Result  Table 3: Classification Rate of Centers  1990 1993 1994 1996 1999 2000 2002 2005 2010    3 3 3 3 1 3 3 2 3    In the above table 3, we present the number of correct players classified into the All-NBA team. Note that each year, 3 centers are chosen for All- NBA. The results indicate an overall classification rate of 89 % in the testing dataset.\nOverall, we have correctly classified the recipients of the All-NBA section 80 % of the time.\n  Who’s taking the All-NBA this year? Given the results, we present the following 1st, 2nd and 3rd All-NBA-Teams:\nAll-NBA 1st Team   Player Position Probability    Luka Dončić G 96 %  James Harden G 85 %  Giannis Antetokounmpo F 100 %  *LeBron James F 97 %  Anthony Davis C 87 %     All-NBA 2nd Team   Player Position Probability    Damian Lillard G 55 %  Trae Young G 36 %  Kawhi Leonard F 89 %  Khris Middleton F 17 %  Nikola Jokic C 64 %     All-NBA 3rd Team   Player Position Probability    **Bradley Beal G 11 %  Russell Westbrook G 5 %  Jimmy Butler F 6 %  Jayson Tatum F 6 %  Joel Embiid C 19 %    *While Lebron was coded as a Guard, we will treat him as a Forward in our projections.\n**We note that Kyrie Irving was actually given the 5th highest fitted value among guards (15 % chance of All-NBA Selection). However, due to his season-ending shoulder-injury, it is unlikely that he would be considered for this award by the end of the season.\nNotable Omissions:\n Guards: Devin Booker (5 %), Zach Lavine (4 %), Donovan Mitchell (3 %), Kemba Walker (2 %), Chris Paul (2 %), Ben Simmons ( \u0026lt; 1 %)\n Forwards: Bam Adebayo (3 %), Pascal Siakam (2 %), Paul George (2 %), Demar Derozan (1 %)\n Centers: Karl-Anthony Towns (13 %)\n  Are there any major snubs from the model? While Devin Booker has put up some stellar numbers (34.2 PTS / 8.6 AST / 5.5 REBS per 100 Possessions), and Chris Paul’s OKC Thunder are surprising everybody out west (currently 5th place with a 40-24 record), it’s tough to exclude any of the guards from the list. Interestingly enough, of the players predicted to win an All-NBA selection, only 1 did not make this year’s All-Star Team (Bradley Beal). Speaking of the All-Star Team, which All-Stars did not get a nod for the All-NBA teams? Among the starters, we are missing: Pascal Siakam and Kemba Walker. Among the reserves, we are missing: Kyle Lowry, Ben Simmons, Bam Adebayo, Domantas Sabonis, Chris Paul, Donovan Mitchell, Brandom Ingram, Rudy Gobert, and Devin Booker.\n   ","date":1579478400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579478400,"objectID":"840f1fc570ffa4e917f4614c58cc82aa","permalink":"/project/all-nba/","publishdate":"2020-01-20T00:00:00Z","relpermalink":"/project/all-nba/","section":"project","summary":"Predicting All-NBA Team","tags":["Prediction","NBA","Basketball"],"title":"Using GAMs to predict 2020 All-NBA Team","type":"project"},{"authors":["Peter Tea"],"categories":["Choropleth maps"],"content":" Visualizing Country Strength in Tennis On the ATP side of tennis, the growth of Canadian representation at major tournaments has really taken off recently. By the end of the 2019 season Denis Shapovalov (age 20) ranked 15th, Felix Auger-Aliassime (age 19) ranked 21st and Milos Raonic (age 28) ranked 31st. Compared to a decade prior, it\u0026rsquo;d be common to not see a single Canadian ranked in the top 100 in terms of singles play. The same can be said on the WTA side of tennis, where Canadian Bianca Andreescu (age 19) ranked 5th by the end of the 2019 season, and also brought home Canada\u0026rsquo;s first grand slam champion (US Open). A decade prior, many of the top Canadian tennis players were not recognizable among the world\u0026rsquo;s elite. So how far exactly have we come as a nation competing in Tennis? With some choropleth maps, we help answer this question!\nHow do we measure country strength in Tennis? We look directly at ranking points. Ranking points are awarded to players who win at big stages of the tennis season. In terms of tournaments, A tennis season can be broken down into Grand Slams, Masters 1000 and Masters 500/250s. The further along a player progresses through a tennis tournament, the more ranking points that player is awarded. For example, a player who wins a grand slam tournament is awarded 2000 points while the runner up is awarded 1200 ranking points. A player who wins a Master 1000 tournament is awarded 1000 points, while the runner up is awarded 600 ranking points.\nFor each player, the final ranking points of the season is computed as follows:\nPlayer scores for all 4 grand slam tournaments + Player score for all 8 Masters 1000 + Player\u0026rsquo;s best 6 results from Master\u0026rsquo;s 500\u0026frasl;250 tournaments. For each season, we quantify each country\u0026rsquo;s tennis strength by computing the total ranking points from players originating from the same country divided by the grand total ranking points of the season.\nUsing player ranking data from Oncourt, I\u0026rsquo;ve processed the data to summarize the total relative contributing ranking points from each country. This is done by summing the yearly ranking points for players from each country, and then dividing by the total ranking points distributed for that year.\nATP Analysis Here is a static image from the 2019 season:\nThe interactive version of this map shows exactly how the nation strength of tennis has shifted through time.\nFrom 2003 – 2019, the ATP world has largely been dominated by Spain and USA. In recent years, Canada seems to be getting better and better!\nWTA Analysis Here is a static image from the 2019 season:\nThe interactive version of this map shows exactly how the nation strength of tennis has shifted through time.\nFrom 2003 – 2019, the WTA world has largely been dominated by Russia and USA.\n","date":1579179600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575205200,"objectID":"977827c73783cfe97745f8ff601ccf37","permalink":"/post/choropleth/","publishdate":"2020-01-16T13:00:00Z","relpermalink":"/post/choropleth/","section":"post","summary":"Using choropleth maps to visualize nation tennis strength","tags":["Academic","Demo","Fun"],"title":"Visualizing Country Strength in Tennis","type":"post"},{"authors":["Peter Tea"],"categories":["Demo"],"content":" Let’s Ball As a fan of the NBA and an enthusiastic R user, I’ve spent some time scouring the internet for ways to obtain useable data to load into R - mainly from the popular data source Basketball-Reference. Unsatisfied with my online data quest, I just decided to scrape the data on Basketball-Reference myself! The process is pretty straightforward, as you will see shortly…\nWorking with Raw Data: HTML and SelectorGadget Firstly, as the entire contents of a Basketball-Reference web page is written in HTML format, you can easily save the entire content and load it into R. However, it simplifies things greatly if we can be more selective in the contents we want to load into R. HTML files contain tags that pretty much denotes different content of the HTML page. If you can find the speficic tag for the table you want to save in R, then you’re golden! Take for example this table that shows the latest (as of December 2nd, 2019) player boxscore stats per 36 minutes.:\nHow can we extract only the information found in the above table? To do that, we can simply use a chrome tool called SelectorGadget. By using this plug-in, we can simply highlight the specific content of the page we want saved, and export it into R. For those unfamiliar with selectorgadget, I’d refer them to this helpful video. Below is a screenshot of my selectorgadget screen.\nYou’ll note that the plug-in produces a node as we select elements of the html page (this will be useful in our R code). Make sure to only highlight elements of the table and nothing else on the page!\n Loading data into R First, let’s load in two R packages:\n rvest: dplyr:  #install.packages(\u0026quot;rvest\u0026quot;) library(rvest) library(dplyr) Now, we read in our dataset by specifying the url and the node.\nmy_url \u0026lt;- read_html(\u0026quot;https://www.basketball-reference.com/leagues/NBA_2020_per_minute.html\u0026quot;) node \u0026lt;- \u0026quot;.left , .center , .right\u0026quot; Let’s look at the first 29 elements of our compiled data:\nscraped_data \u0026lt;- my_url %\u0026gt;% html_nodes(node) %\u0026gt;% html_text() my_variable_names \u0026lt;- scraped_data[1:29] print(my_variable_names) ## [1] \u0026quot;Rk\u0026quot; \u0026quot;Player\u0026quot; \u0026quot;Pos\u0026quot; \u0026quot;Age\u0026quot; \u0026quot;Tm\u0026quot; \u0026quot;G\u0026quot; \u0026quot;GS\u0026quot; \u0026quot;MP\u0026quot; ## [9] \u0026quot;FG\u0026quot; \u0026quot;FGA\u0026quot; \u0026quot;FG%\u0026quot; \u0026quot;3P\u0026quot; \u0026quot;3PA\u0026quot; \u0026quot;3P%\u0026quot; \u0026quot;2P\u0026quot; \u0026quot;2PA\u0026quot; ## [17] \u0026quot;2P%\u0026quot; \u0026quot;FT\u0026quot; \u0026quot;FTA\u0026quot; \u0026quot;FT%\u0026quot; \u0026quot;ORB\u0026quot; \u0026quot;DRB\u0026quot; \u0026quot;TRB\u0026quot; \u0026quot;AST\u0026quot; ## [25] \u0026quot;STL\u0026quot; \u0026quot;BLK\u0026quot; \u0026quot;TOV\u0026quot; \u0026quot;PF\u0026quot; \u0026quot;PTS\u0026quot; These names match exactly the first 29 elements of the table we want to extract.\nJust as an FYI, the data is saved as a vector in R, with 13,922 entries.\nis.vector(scraped_data) ## [1] TRUE length(scraped_data) ## [1] 14270  Data Cleaning in R Some of the variable names begin with numbers which is a huge no-no in R, so let’s manually change these names:\nmy_variable_names[12:17] \u0026lt;- c(\u0026quot;Threes_made\u0026quot;, \u0026quot;Threes_attempted\u0026quot;, \u0026quot;Threes_percent\u0026quot;, \u0026quot;Twos_made\u0026quot;, \u0026quot;Twos_attempted\u0026quot;, \u0026quot;Twos_percent\u0026quot;) print(my_variable_names) ## [1] \u0026quot;Rk\u0026quot; \u0026quot;Player\u0026quot; \u0026quot;Pos\u0026quot; \u0026quot;Age\u0026quot; ## [5] \u0026quot;Tm\u0026quot; \u0026quot;G\u0026quot; \u0026quot;GS\u0026quot; \u0026quot;MP\u0026quot; ## [9] \u0026quot;FG\u0026quot; \u0026quot;FGA\u0026quot; \u0026quot;FG%\u0026quot; \u0026quot;Threes_made\u0026quot; ## [13] \u0026quot;Threes_attempted\u0026quot; \u0026quot;Threes_percent\u0026quot; \u0026quot;Twos_made\u0026quot; \u0026quot;Twos_attempted\u0026quot; ## [17] \u0026quot;Twos_percent\u0026quot; \u0026quot;FT\u0026quot; \u0026quot;FTA\u0026quot; \u0026quot;FT%\u0026quot; ## [21] \u0026quot;ORB\u0026quot; \u0026quot;DRB\u0026quot; \u0026quot;TRB\u0026quot; \u0026quot;AST\u0026quot; ## [25] \u0026quot;STL\u0026quot; \u0026quot;BLK\u0026quot; \u0026quot;TOV\u0026quot; \u0026quot;PF\u0026quot; ## [29] \u0026quot;PTS\u0026quot; We will use this vector data to fill in an empty table we create in R. We have to note though, that due to the way we’ve scraped the data there exists some garbage we must remove. If you look carefully, the table repeats the variable names after every 20th player. I’ll illustrate below:\nscraped_data[582: 660] ## [1] \u0026quot;Dwayne Bacon\u0026quot; \u0026quot;SG\u0026quot; \u0026quot;24\u0026quot; \u0026quot;CHO\u0026quot; ## [5] \u0026quot;23\u0026quot; \u0026quot;10\u0026quot; \u0026quot;401\u0026quot; \u0026quot;4.5\u0026quot; ## [9] \u0026quot;14.3\u0026quot; \u0026quot;.314\u0026quot; \u0026quot;0.9\u0026quot; \u0026quot;4.0\u0026quot; ## [13] \u0026quot;.227\u0026quot; \u0026quot;3.6\u0026quot; \u0026quot;10.3\u0026quot; \u0026quot;.348\u0026quot; ## [17] \u0026quot;2.2\u0026quot; \u0026quot;3.1\u0026quot; \u0026quot;.686\u0026quot; \u0026quot;0.9\u0026quot; ## [21] \u0026quot;4.0\u0026quot; \u0026quot;4.8\u0026quot; \u0026quot;2.4\u0026quot; \u0026quot;1.4\u0026quot; ## [25] \u0026quot;0.2\u0026quot; \u0026quot;1.7\u0026quot; \u0026quot;2.9\u0026quot; \u0026quot;12.0\u0026quot; ## [29] \u0026quot;Rk\u0026quot; \u0026quot;Player\u0026quot; \u0026quot;Pos\u0026quot; \u0026quot;Age\u0026quot; ## [33] \u0026quot;Tm\u0026quot; \u0026quot;G\u0026quot; \u0026quot;GS\u0026quot; \u0026quot;MP\u0026quot; ## [37] \u0026quot;FG\u0026quot; \u0026quot;FGA\u0026quot; \u0026quot;FG%\u0026quot; \u0026quot;3P\u0026quot; ## [41] \u0026quot;3PA\u0026quot; \u0026quot;3P%\u0026quot; \u0026quot;2P\u0026quot; \u0026quot;2PA\u0026quot; ## [45] \u0026quot;2P%\u0026quot; \u0026quot;FT\u0026quot; \u0026quot;FTA\u0026quot; \u0026quot;FT%\u0026quot; ## [49] \u0026quot;ORB\u0026quot; \u0026quot;DRB\u0026quot; \u0026quot;TRB\u0026quot; \u0026quot;AST\u0026quot; ## [53] \u0026quot;STL\u0026quot; \u0026quot;BLK\u0026quot; \u0026quot;TOV\u0026quot; \u0026quot;PF\u0026quot; ## [57] \u0026quot;PTS\u0026quot; \u0026quot;21\u0026quot; \u0026quot;Marvin Bagley\u0026quot; \u0026quot;PF\u0026quot; ## [61] \u0026quot;20\u0026quot; \u0026quot;SAC\u0026quot; \u0026quot;8\u0026quot; \u0026quot;2\u0026quot; ## [65] \u0026quot;192\u0026quot; \u0026quot;8.2\u0026quot; \u0026quot;18.6\u0026quot; \u0026quot;.444\u0026quot; ## [69] \u0026quot;0.6\u0026quot; \u0026quot;2.1\u0026quot; \u0026quot;.273\u0026quot; \u0026quot;7.7\u0026quot; ## [73] \u0026quot;16.5\u0026quot; \u0026quot;.466\u0026quot; \u0026quot;2.6\u0026quot; \u0026quot;3.4\u0026quot; ## [77] \u0026quot;.778\u0026quot; \u0026quot;3.4\u0026quot; \u0026quot;7.5\u0026quot; The first instance of this junk is indexed here:\nscraped_data[610: 638] ## [1] \u0026quot;Rk\u0026quot; \u0026quot;Player\u0026quot; \u0026quot;Pos\u0026quot; \u0026quot;Age\u0026quot; \u0026quot;Tm\u0026quot; \u0026quot;G\u0026quot; \u0026quot;GS\u0026quot; \u0026quot;MP\u0026quot; ## [9] \u0026quot;FG\u0026quot; \u0026quot;FGA\u0026quot; \u0026quot;FG%\u0026quot; \u0026quot;3P\u0026quot; \u0026quot;3PA\u0026quot; \u0026quot;3P%\u0026quot; \u0026quot;2P\u0026quot; \u0026quot;2PA\u0026quot; ## [17] \u0026quot;2P%\u0026quot; \u0026quot;FT\u0026quot; \u0026quot;FTA\u0026quot; \u0026quot;FT%\u0026quot; \u0026quot;ORB\u0026quot; \u0026quot;DRB\u0026quot; \u0026quot;TRB\u0026quot; \u0026quot;AST\u0026quot; ## [25] \u0026quot;STL\u0026quot; \u0026quot;BLK\u0026quot; \u0026quot;TOV\u0026quot; \u0026quot;PF\u0026quot; \u0026quot;PTS\u0026quot; The second instance of this junk is indexed here:\nscraped_data[1219: 1247] ## [1] \u0026quot;Rk\u0026quot; \u0026quot;Player\u0026quot; \u0026quot;Pos\u0026quot; \u0026quot;Age\u0026quot; \u0026quot;Tm\u0026quot; \u0026quot;G\u0026quot; \u0026quot;GS\u0026quot; \u0026quot;MP\u0026quot; ## [9] \u0026quot;FG\u0026quot; \u0026quot;FGA\u0026quot; \u0026quot;FG%\u0026quot; \u0026quot;3P\u0026quot; \u0026quot;3PA\u0026quot; \u0026quot;3P%\u0026quot; \u0026quot;2P\u0026quot; \u0026quot;2PA\u0026quot; ## [17] \u0026quot;2P%\u0026quot; \u0026quot;FT\u0026quot; \u0026quot;FTA\u0026quot; \u0026quot;FT%\u0026quot; \u0026quot;ORB\u0026quot; \u0026quot;DRB\u0026quot; \u0026quot;TRB\u0026quot; \u0026quot;AST\u0026quot; ## [25] \u0026quot;STL\u0026quot; \u0026quot;BLK\u0026quot; \u0026quot;TOV\u0026quot; \u0026quot;PF\u0026quot; \u0026quot;PTS\u0026quot; It seems like this junk repeats every 609th element (1219 - 610 = 609). To remove this junk, I’ll simply create a vector of indices that correspond to the junk we want removed.\nto_remove \u0026lt;- 610:638 n \u0026lt;- length(scraped_data) while(to_remove[length(to_remove)] \u0026lt;= n - 609 ){ A \u0026lt;- to_remove[length(to_remove)] + 581 #Note: 1219 - 638 = 581 to_add \u0026lt;- A:(A+28) to_remove \u0026lt;- c(to_remove, to_add) } Now we remove all the junk as follows:\nprocess_dat \u0026lt;- scraped_data[-to_remove] We can check that we have reduced our data vector:\nn2 \u0026lt;- length(process_dat) print(n2) ## [1] 13603 Great! Now we’ll get to work on filling in a data-frame with this cleaned data. The way I did it was to specify the elements that should be added row-wise to a data table in R. I.e. every 29 elements makes up one row in our table:\nmy_index \u0026lt;- seq(from = 30, to = n2-2, by = 29) # Seems to be a glitch where the last 2 elements of scraped_data are not from the table we want to extract. #Initialize data frame... my_data \u0026lt;- data.frame(matrix(ncol = 29, nrow = 457)) # Note the dimensions here are found by looking at the table on basketball- # reference. # Loop to add each row to the data frame for (i in 1:length(my_index)){ current_ind \u0026lt;- my_index[i] my_data[i,] \u0026lt;- process_dat[current_ind:(current_ind+30)] } colnames(my_data) \u0026lt;- my_variable_names Let’s take a look at what our table looks like:\nknitr::kable(my_data[1:5,], caption = \u0026quot;Our data\u0026quot;)  Table 1: Our data  Rk Player Pos Age Tm G GS MP FG FGA FG% Threes_made Threes_attempted Threes_percent Twos_made Twos_attempted Twos_percent FT FTA FT% ORB DRB TRB AST STL BLK TOV PF PTS    1 Steven Adams C 26 OKC 26 26 716 6.6 10.6 .624 0.0 0.1 .000 6.6 10.5 .627 1.8 3.7 .486 4.5 8.4 12.9 3.6 0.7 1.6 2.1 2.5 15.0  2 Bam Adebayo C 22 MIA 30 30 1023 6.1 10.8 .565 0.0 0.3 .111 6.1 10.5 .579 4.4 6.4 .685 2.7 8.5 11.2 4.9 1.6 1.4 3.1 2.9 16.6  3 LaMarcus Aldridge C 34 SAS 27 27 893 8.6 16.7 .513 0.7 2.0 .347 7.9 14.8 .536 3.2 3.9 .825 2.3 5.7 8.0 2.7 0.7 2.1 1.6 2.4 21.1  4 Nickeil Alexander-Walker SG 21 NOP 26 0 337 5.7 17.1 .331 3.0 9.0 .333 2.7 8.1 .329 1.2 1.7 .688 0.4 5.3 5.8 4.9 1.0 0.4 2.8 3.2 15.5  5 Grayson Allen SG 24 MEM 16 0 295 6.0 13.5 .441 2.7 6.8 .393 3.3 6.7 .491 2.0 2.3 .842 0.2 4.8 5.0 2.9 0.6 0.1 2.0 3.1 16.6    One last step required! All columns in my table are type chr. We want to change the columns that are numeric into a numeric type!\nstr(my_data) ## \u0026#39;data.frame\u0026#39;: 468 obs. of 29 variables: ## $ Rk : chr \u0026quot;1\u0026quot; \u0026quot;2\u0026quot; \u0026quot;3\u0026quot; \u0026quot;4\u0026quot; ... ## $ Player : chr \u0026quot;Steven Adams\u0026quot; \u0026quot;Bam Adebayo\u0026quot; \u0026quot;LaMarcus Aldridge\u0026quot; \u0026quot;Nickeil Alexander-Walker\u0026quot; ... ## $ Pos : chr \u0026quot;C\u0026quot; \u0026quot;C\u0026quot; \u0026quot;C\u0026quot; \u0026quot;SG\u0026quot; ... ## $ Age : chr \u0026quot;26\u0026quot; \u0026quot;22\u0026quot; \u0026quot;34\u0026quot; \u0026quot;21\u0026quot; ... ## $ Tm : chr \u0026quot;OKC\u0026quot; \u0026quot;MIA\u0026quot; \u0026quot;SAS\u0026quot; \u0026quot;NOP\u0026quot; ... ## $ G : chr \u0026quot;26\u0026quot; \u0026quot;30\u0026quot; \u0026quot;27\u0026quot; \u0026quot;26\u0026quot; ... ## $ GS : chr \u0026quot;26\u0026quot; \u0026quot;30\u0026quot; \u0026quot;27\u0026quot; \u0026quot;0\u0026quot; ... ## $ MP : chr \u0026quot;716\u0026quot; \u0026quot;1023\u0026quot; \u0026quot;893\u0026quot; \u0026quot;337\u0026quot; ... ## $ FG : chr \u0026quot;6.6\u0026quot; \u0026quot;6.1\u0026quot; \u0026quot;8.6\u0026quot; \u0026quot;5.7\u0026quot; ... ## $ FGA : chr \u0026quot;10.6\u0026quot; \u0026quot;10.8\u0026quot; \u0026quot;16.7\u0026quot; \u0026quot;17.1\u0026quot; ... ## $ FG% : chr \u0026quot;.624\u0026quot; \u0026quot;.565\u0026quot; \u0026quot;.513\u0026quot; \u0026quot;.331\u0026quot; ... ## $ Threes_made : chr \u0026quot;0.0\u0026quot; \u0026quot;0.0\u0026quot; \u0026quot;0.7\u0026quot; \u0026quot;3.0\u0026quot; ... ## $ Threes_attempted: chr \u0026quot;0.1\u0026quot; \u0026quot;0.3\u0026quot; \u0026quot;2.0\u0026quot; \u0026quot;9.0\u0026quot; ... ## $ Threes_percent : chr \u0026quot;.000\u0026quot; \u0026quot;.111\u0026quot; \u0026quot;.347\u0026quot; \u0026quot;.333\u0026quot; ... ## $ Twos_made : chr \u0026quot;6.6\u0026quot; \u0026quot;6.1\u0026quot; \u0026quot;7.9\u0026quot; \u0026quot;2.7\u0026quot; ... ## $ Twos_attempted : chr \u0026quot;10.5\u0026quot; \u0026quot;10.5\u0026quot; \u0026quot;14.8\u0026quot; \u0026quot;8.1\u0026quot; ... ## $ Twos_percent : chr \u0026quot;.627\u0026quot; \u0026quot;.579\u0026quot; \u0026quot;.536\u0026quot; \u0026quot;.329\u0026quot; ... ## $ FT : chr \u0026quot;1.8\u0026quot; \u0026quot;4.4\u0026quot; \u0026quot;3.2\u0026quot; \u0026quot;1.2\u0026quot; ... ## $ FTA : chr \u0026quot;3.7\u0026quot; \u0026quot;6.4\u0026quot; \u0026quot;3.9\u0026quot; \u0026quot;1.7\u0026quot; ... ## $ FT% : chr \u0026quot;.486\u0026quot; \u0026quot;.685\u0026quot; \u0026quot;.825\u0026quot; \u0026quot;.688\u0026quot; ... ## $ ORB : chr \u0026quot;4.5\u0026quot; \u0026quot;2.7\u0026quot; \u0026quot;2.3\u0026quot; \u0026quot;0.4\u0026quot; ... ## $ DRB : chr \u0026quot;8.4\u0026quot; \u0026quot;8.5\u0026quot; \u0026quot;5.7\u0026quot; \u0026quot;5.3\u0026quot; ... ## $ TRB : chr \u0026quot;12.9\u0026quot; \u0026quot;11.2\u0026quot; \u0026quot;8.0\u0026quot; \u0026quot;5.8\u0026quot; ... ## $ AST : chr \u0026quot;3.6\u0026quot; \u0026quot;4.9\u0026quot; \u0026quot;2.7\u0026quot; \u0026quot;4.9\u0026quot; ... ## $ STL : chr \u0026quot;0.7\u0026quot; \u0026quot;1.6\u0026quot; \u0026quot;0.7\u0026quot; \u0026quot;1.0\u0026quot; ... ## $ BLK : chr \u0026quot;1.6\u0026quot; \u0026quot;1.4\u0026quot; \u0026quot;2.1\u0026quot; \u0026quot;0.4\u0026quot; ... ## $ TOV : chr \u0026quot;2.1\u0026quot; \u0026quot;3.1\u0026quot; \u0026quot;1.6\u0026quot; \u0026quot;2.8\u0026quot; ... ## $ PF : chr \u0026quot;2.5\u0026quot; \u0026quot;2.9\u0026quot; \u0026quot;2.4\u0026quot; \u0026quot;3.2\u0026quot; ... ## $ PTS : chr \u0026quot;15.0\u0026quot; \u0026quot;16.6\u0026quot; \u0026quot;21.1\u0026quot; \u0026quot;15.5\u0026quot; ... my_data[, c(4, 6:29)] \u0026lt;- sapply(my_data[, c(4,6:29)], as.numeric) str(my_data) ## \u0026#39;data.frame\u0026#39;: 468 obs. of 29 variables: ## $ Rk : chr \u0026quot;1\u0026quot; \u0026quot;2\u0026quot; \u0026quot;3\u0026quot; \u0026quot;4\u0026quot; ... ## $ Player : chr \u0026quot;Steven Adams\u0026quot; \u0026quot;Bam Adebayo\u0026quot; \u0026quot;LaMarcus Aldridge\u0026quot; \u0026quot;Nickeil Alexander-Walker\u0026quot; ... ## $ Pos : chr \u0026quot;C\u0026quot; \u0026quot;C\u0026quot; \u0026quot;C\u0026quot; \u0026quot;SG\u0026quot; ... ## $ Age : num 26 22 34 21 24 21 27 29 26 31 ... ## $ Tm : chr \u0026quot;OKC\u0026quot; \u0026quot;MIA\u0026quot; \u0026quot;SAS\u0026quot; \u0026quot;NOP\u0026quot; ... ## $ G : num 26 30 27 26 16 29 1 18 25 2 ... ## $ GS : num 26 30 27 0 0 26 0 2 1 0 ... ## $ MP : num 716 1023 893 337 295 ... ## $ FG : num 6.6 6.1 8.6 5.7 6 6.6 6.8 2.4 4.4 5.1 ... ## $ FGA : num 10.6 10.8 16.7 17.1 13.5 10 13.5 8.1 9.2 18 ... ## $ FG% : num 0.624 0.565 0.513 0.331 0.441 0.662 0.5 0.291 0.479 0.286 ... ## $ Threes_made : num 0 0 0.7 3 2.7 0 6.8 0.9 0.4 2.6 ... ## $ Threes_attempted: num 0.1 0.3 2 9 6.8 0.1 9 3.4 1.6 12.9 ... ## $ Threes_percent : num 0 0.111 0.347 0.333 0.393 0 0.75 0.25 0.238 0.2 ... ## $ Twos_made : num 6.6 6.1 7.9 2.7 3.3 6.6 0 1.5 4 2.6 ... ## $ Twos_attempted : num 10.5 10.5 14.8 8.1 6.7 9.9 4.5 4.7 7.6 5.1 ... ## $ Twos_percent : num 0.627 0.579 0.536 0.329 0.491 0.668 0 0.32 0.531 0.5 ... ## $ FT : num 1.8 4.4 3.2 1.2 2 3.5 0 1.8 1.7 0 ... ## $ FTA : num 3.7 6.4 3.9 1.7 2.3 5.7 0 2.7 2.7 0 ... ## $ FT% : num 0.486 0.685 0.825 0.688 0.842 0.615 NA 0.655 0.629 NA ... ## $ ORB : num 4.5 2.7 2.3 0.4 0.2 4.9 0 2.3 1.9 0 ... ## $ DRB : num 8.4 8.5 5.7 5.3 4.8 9.4 0 6 6.1 18 ... ## $ TRB : num 12.9 11.2 8 5.8 5 14.3 0 8.2 8 18 ... ## $ AST : num 3.6 4.9 2.7 4.9 2.9 1.8 4.5 2 4.3 5.1 ... ## $ STL : num 0.7 1.6 0.7 1 0.6 1 2.3 1.7 1.3 2.6 ... ## $ BLK : num 1.6 1.4 2.1 0.4 0.1 1.9 0 0.8 1 0 ... ## $ TOV : num 2.1 3.1 1.6 2.8 2 1.6 2.3 1.6 1.9 2.6 ... ## $ PF : num 2.5 2.9 2.4 3.2 3.1 3.4 2.3 2.6 3.1 2.6 ... ## $ PTS : num 15 16.6 21.1 15.5 16.6 16.7 20.3 7.4 10.9 12.9 ... Awesome! Now we’re done. The data is now saved into R.\n Illustration: Using the Data in R To illustrate how we might use this data, I’ll go through an excercise of data manipulation. Currently on my Fantasy League, we have defined a metric that takes some weighted average of a player’s box scofe output. Using the data we’ve just compiled, I’ve gone ahead and calculated this metric to see which players perform fantasy league-wise per 36 minutes.\nmy_data \u0026lt;- as_tibble(my_data) #I like tibbles over data frames #Compute new column of Fantasy points my_data \u0026lt;- my_data %\u0026gt;% mutate(FP = - 0.5*FGA + 0.75*Threes_made + PTS + 1.5*ORB + DRB + 1.5*AST + 2.5*STL + 2.5*BLK - TOV) # Which players add most fantasy point value? FP_data \u0026lt;- my_data %\u0026gt;% select(Player, Tm, FP,G) %\u0026gt;% filter(G \u0026gt; 5) %\u0026gt;% arrange(desc(FP)) knitr::kable(FP_data[1:10,], caption = \u0026quot;Fantasy Data\u0026quot;)  Table 2: Fantasy Data  Player Tm FP G    Giannis Antetokounmpo MIL 54.475 31  Luka Dončić DAL 49.200 25  Chimezie Metu SAS 48.850 9  James Harden HOU 47.125 31  Karl-Anthony Towns MIN 45.250 23  Joel Embiid PHI 44.150 27  Anthony Davis LAL 43.125 29  LeBron James LAL 43.125 30  Andre Drummond DET 41.750 29  Hassan Whiteside POR 41.350 28      ","date":1576760400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575291600,"objectID":"1edb9b37472e84b9b7ae80f14fc0ae48","permalink":"/post/scraping-basketball-reference/","publishdate":"2019-12-19T13:00:00Z","relpermalink":"/post/scraping-basketball-reference/","section":"post","summary":"Scrape Baksetball-Reference tables in under 12 minutes.","tags":["Academic","Basketball","Demo","dplyr","R","rvest","Web Scraping"],"title":"Scraping data from Basketball-Reference with Selector Gadget","type":"post"},{"authors":["Peter Tea"],"categories":["Demo"],"content":" The lazy way to hugo-academic This post is currently under construction. Here, I\u0026rsquo;ll post some quick tips with navigating through using hugo-academic on R blogdown.\nTable of contents  Emoticons Browser Icon Quick Links Customize Dropdown Menu  Emoticons  This site provides a cheatsheet on available emoticons you can use like 😌 or 🙈.\nAdding personalized icon on browser tab  On the top left of the image (the browser tab), I\u0026rsquo;ve added a customized image of a tennis ball. You can do the same with any image by going to this folder:\nThemes --\u0026gt; hugo-academic --\u0026gt; static --\u0026gt; img  You will see in this folder, there are three .png files named: icon-32.png, icon-192.png, and icon-512.png. Go ahead and upload the same image 3x to this folder, and change their names to the above.\nQuick links to your slides, poster, code, datasets and more!  In your preamble, you can specify the options: url_slides:, url_poster:, url_cite:, url_code:, url_video:, url_Dataset:, url_PDF: and url_project: if you wanted to add quick links to these documents on your posts. Just make sure these files are in the same directory as your post directory.\n\u0026ndash; Peter you should add an image of this here.\nAdding icons to your \u0026ldquo;About Me\u0026rdquo; page You can add cool icons that links to your email or other social media. In the image below, I have icons set up to my email, linkedin, github and instagram accounts.\nHere\u0026rsquo;s how to do it:\nContent --\u0026gt; authors --\u0026gt; admin --\u0026gt; _index.md  In the preamble of this -index.md file, you will need to add an \u0026ldquo;icon\u0026rdquo; section that looks like this:\n- icon: linkedin icon_pack: fab link: URL link - icon: github icon_pack: fab link: URL link - icon: instagram icon_pack: fab link: URL link  Adding Resume to dropdown menu  Config --\u0026gt; _default --\u0026gt; menus.toml  Changing your profile picture on the \u0026ldquo;About Me\u0026rdquo; section.  public --\u0026gt; authors --\u0026gt; admin Rename picture to avatar_hu96a5ab8e0364e843af4687201b687892_52303_250x250_fill_q90_lanczos_center.jpg  ","date":1574946000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575205200,"objectID":"6d9f281a594cfc2d6f7ff25d0e140761","permalink":"/post/hugo-academic-cheatsheet/","publishdate":"2019-11-28T13:00:00Z","relpermalink":"/post/hugo-academic-cheatsheet/","section":"post","summary":"The sparknotes for some awesome aesthetics.","tags":["Academic","Demo","Fun"],"title":"Hugo-Academic CheatSheet","type":"post"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":["Sports"],"content":" Statistics in Tennis Peter Tea\nWhich country contributes the most Tennis talent? Serving strategies in Tennis  Hello World \u0026mdash;  class: middle, center\nWimbledon 2019 Rafael Nadal US Open 2019 Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"c05613099fb01506a7fae34edfae69dd","permalink":"/slides/sports-analytics-slides/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/sports-analytics-slides/","section":"slides","summary":"...","tags":[],"title":"Sports Analytics","type":"slides"},{"authors":[],"categories":null,"content":" This is an awesome warning feature.   I was a research poster presenter at the 2018 Canadian Undergraduate Conference on Healthcare (CUCOH) - \u0026ldquo;The Future of Healthcare: A Multidisciplinary Approach\u0026rdquo;. Here is a link to my poster, which was presented to a group of Queen\u0026rsquo;s medical students as well as undergraduate science students across Canada. I unfortunately did not win the poster research competition (some musician won), but had a blast presenting and hearing about other research topics! I\u0026rsquo;ve also presented this topic in a lab meeting, using these prepared slides\n","date":1541768400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541768400,"objectID":"cda59c29b940687243d8baf666125b42","permalink":"/talk/cucoh/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/cucoh/","section":"talk","summary":"Investigation on Kernel-Based Methods.","tags":["Kernel Methods","Simulation","Statistical Genetics","Academic","Uottawa","Queen's"],"title":"A Genetic Association Study Comparing Kernel-based Methods, with Application to Crohn's Disease","type":"talk"},{"authors":null,"categories":null,"content":"During the summer of 2017, I worked with Professor Termeh Kousha as a research assistant. Part of my responsability was to compile notes on statistical methods. ","date":1499346000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1499346000,"objectID":"0339426a864e3571471a71e3a7f62f43","permalink":"/talk/uottawa-summer-2017/","publishdate":"2017-07-06T13:00:00Z","relpermalink":"/talk/uottawa-summer-2017/","section":"talk","summary":"An introduction to ANOVA.","tags":["ANOVA","R","Academic","Uottawa"],"title":"An introduction to ANOVA, with application to a Cholesterol dataset","type":"talk"}]